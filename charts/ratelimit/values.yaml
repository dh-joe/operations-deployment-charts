resources:
  replicas: 1

app:
  image: ratelimit
  version: latest
  # This will only allow ingress via the gRPC port (the HTTP port does not support TLS)
  port: 8081
  requests:
    cpu: 200m
    memory: 200Mi
  limits:
    cpu: 500m
    memory: 500Mi
  # ratelimit configuration
  # see https://github.com/envoyproxy/ratelimit/tree/main#configuration
  # Array keys are ratelimit domains (they need to be unique), the value
  # needs is one or many descriptors.
  configuration:
    mw-api-int:
      - key: user-agent
        rate_limit:
          unit: second
          requests_per_unit: 1

nutcracker:
  requests:
    memory: 100Mi
    cpu: 100m
  limits:
    memory: 200Mi
    cpu: 200m
  servers: []

# Configuration for the ratelimit container
config:
  public:
    LOG_LEVEL: warn
    LOG_FORMAT: json
    # Configuration files are loaded from RUNTIME_ROOT/RUNTIME_SUBDIRECTORY/config/*.yaml
    RUNTIME_ROOT: /etc
    RUNTIME_SUBDIRECTORY: ratelimit
    RUNTIME_IGNOREDOTFILES: true
    # The ConfigMap volume updates files directly, no need to watch the root
    RUNTIME_WATCH_ROOT: false
    # Start in an unhealthy state and become healthy when at least one config is loaded
    HEALTHY_WITH_AT_LEAST_ONE_CONFIG_LOADED: true
    # Stores the over-the-limit cache keys to avoid reading the redis cache again for the already over-the-limit keys
    LOCAL_CACHE_SIZE_IN_BYTES: "1000000"
    GRPC_SERVER_USE_TLS: true
    GRPC_SERVER_TLS_CERT: /etc/ratelimit/ssl/tls.crt
    GRPC_SERVER_TLS_KEY: /etc/ratelimit/ssl/tls.key
    USE_STATSD: true
    STATSD_HOST: localhost
    STATSD_PORT: 9125
  private: {}
    # REDIS_AUTH: "snakeoil"

certificates:
  - name: grpc

common_images:
  statsd:
    exporter: prometheus-statsd-exporter:latest
  nutcracker:
    nutcracker: "nutcracker:latest"

docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent

monitoring:
  # If enabled is true, monitoring annotations will be added to the deployment.
  enabled: true
  statsd:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 200m
    filename: config/prometheus-statsd.conf

networkpolicy:
  egress:
    enabled: true

# The set of external services to allow egress to
# Example:
# kafka:
# - main-codfw
# - main-eqiad
# presto:
# - analytics
#
# See https://wikitech.wikimedia.org/wiki/Kubernetes/Deployment_Charts#Enabling_egress_to_services_external_to_Kubernetes
# for the list of supported services
external_services:
  redis-6380: [misc]

# Optional affinity settings
affinity: {}
mesh:
  enabled: false
# Additional resources if we want to add a port for a debugger to connect to.
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []
