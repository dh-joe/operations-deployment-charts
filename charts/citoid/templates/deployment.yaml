apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "base.name.release" . }}
  labels:
    app: {{ template "base.name.chart" . }}
    chart: {{ template "base.name.chartid" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "base.name.chart" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.resources.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "base.name.chart" . }}
        release: {{ .Release.Name }}
        routed_via: {{ .Values.routed_via | default .Release.Name }}
      annotations:
        checksum/config: {{ include "config.app" . | sha256sum }}
        {{ if .Values.monitoring.enabled -}}
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
        {{ else -}}
        prometheus.io/scrape: "false"
        {{ end -}}
        {{- include "mesh.name.annotations" . | indent 8 }}
    spec:
      {{- if .Values.affinity }}
      {{- toYaml .Values.affinity | nindent 6 }}
      {{- end }}
      containers:
        # The main application container
        - name: {{ template "base.name.release" . }}
          image: "{{ .Values.docker.registry }}/{{ .Values.main_app.image }}:{{ .Values.main_app.version }}"
          command: ["node"]
          args: ["/srv/service/server.js", "-c", "/etc/citoid/config.yaml"]
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          ports:
            - containerPort: {{ .Values.app.port }}
          {{- if .Values.main_app.liveness_probe }}
          livenessProbe:
          {{- toYaml .Values.main_app.liveness_probe | nindent 12 }}
          {{- end }}
          {{- if .Values.main_app.readiness_probe }}
          readinessProbe:
          {{- toYaml .Values.main_app.readiness_probe | nindent 12 }}
          {{- end }}
          env:
            - name: SERVICE_IDENTIFIER
              value: {{ template "base.name.release" . }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/citoid
          resources:
            requests:
{{ toYaml .Values.main_app.requests | indent 14 }}
            limits:
{{ toYaml .Values.main_app.limits | indent 14 }}
          {{- include "base.helper.restrictedSecurityContext" . | indent 10 }}
        {{- include "mesh.deployment.container" . | indent 8 }}
      volumes:
        {{/* This is split from the above on purpose to indicate they are different logical blocks */}}
        - name: config-volume
          configMap:
            name: config-{{ .Release.Name }}
        {{- include "mesh.deployment.volume" . | indent 8 }}
