# Default values for eventgate-analytics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
helm_scaffold_version: 0.1 # This can be useful when backporting fixes.
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1

main_app:
  # Don't use docker.registry value for main_app image so we can override
  # and use locally built and cached images via --set main_app.image during development.
  image: docker-registry.wikimedia.org/wikimedia/eventgate-ci
  version: latest # we use latest everywhere in the defaults.
  port: 8192
  #log_level: info   # info is the default
  # Value of kafka.conf.'metadata.broker.list' in app config.yaml.
  # Override this in production.
  kafka_broker_list: kafka.default.svc.cluster.local:9092

  # Override this during helm install with --set topic_prefix=XXXX
  # In production release this should be the datacenter name.
  # (a '.' will be appended to this in the config.yaml template)
  topic_prefix: datacenter1

  # See: https://phabricator.wikimedia.org/T220661#5117972
  requests:
    cpu: 200m
    memory: 150Mi
  limits:
    cpu: 2000m
    memory: 300Mi

  # Uncomment to enable rdkafka trace logging (and set log_level: trace above)
  #extra_kafka_conf:
  #  event_cb: true
  #  log_level: 7
  #  debug: broker,topic,msg

monitoring:
  enabled: true
  image_version: latest

service:
  deployment: minikube # valid values are "production" and "minikube"
  port: null # you need to define this if "production" is used. In minikube environments let it autoallocate

# Debug mode adds the --profile and --inspect flags to the NodeJS service, and
# also deploys a wmfdebug sidecar container in the pod. You can get the v8.log profiling output
# from the pod with e.g (staging):
#   sudo KUBECONFIG=/etc/kubernetes/admin-staging.config kubectl cp -n eventgate-analytics -c eventgate-analytics-staging <pod_id>:/tmp/eventgate-analytics-v8.log ./
# You can connect to the Node Inspector on port 31229 for the master service-runner process,
# and port 31230 for the worker process.  Note that if a worker is restarted, it willl
# claim a new port and not be reachable externally.
# You can log into the wmfdebug container with e.g. (staging):
#   sudo KUBECONFIG=/etc/kubernetes/admin-staging.config kubectl exec -ti <pod_id> -n eventgate-analytics -c staging-wmfdebug bash
#
#debug_mode_enabled: false

subcharts:
  # Set this to true during local minikube development to get a Kafka pod deployed.
  # You only need to do this if you don't manually install the kafka-dev chart.
  kafka: false
