# Note: statsd timer metrics are millisecond based, but prometheus-statsd-exporter makes them
# second based to conform to prometheus, so all metrics are divided by 1000
mappings:
  - match: '*.gc.*'
    name: service_runner_gc_seconds
    timer_type: histogram
    buckets: [5e-4, 1e-3, 5e-3, 10e-3, 15e-3, 30e-3, 50e-3]
    labels:
      service: $1
      event: $2

  - match: '*.heap.*'
    # service-runner abuses timer for heap data
    name: service_runner_${2}_heap_kilobytes
    timer_type: histogram
    buckets: [1e+3, 1e+4, 1e+5, 1e+6, 1e+7]
    labels:
      service: $1

  - match: '^([a-z0-9-]+)\.([^.]+)\.(GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH)\.([0-9][0-9][0-9]|ALL|[0-9]xx)$'
    match_type: regex
    name: service_runner_request_duration_seconds
    timer_type: histogram
    buckets:  [0.01, 0.05, 0.1, 0.3, 1]
    labels:
      service: $1
      uri: $2
      method: $3
      status: $4

#
# node-rdkafka / librdkafka metric mappings
#
# These metrics are emitted every statistics.interval.ms
# from node-rdkafka, and then flattenend and sent to statsd
# reporter via node-rdkafka-statsd library.
# The prefixes here, e.g. $service.rdkafka.producer.$producer_type,
# are set by service-runner & the wikimedia-eventgate implementation.
# wikimedia-eventgate uses two producer types: one 'guaranteed' and the other
# 'hasty' (non ACKed).
# $service label corresponds to what is set in service-runner config for app name.
#


##### Kafka Producer global metrics.
# e.g.
# eventgate.rdkafka.producer.guaranteed.txmsgs ->
# eventgate_rdkafka_producer_txmsgs{producer_type="guaranteed",service="eventgate"}
  - match: '*.rdkafka.producer.*.*'
    name: eventgate_rdkafka_producer_${3}
    help: Kafka Producer global metric
    labels:
      service: $1
      producer_type: $2



##### Kafka Producer topic-partition specific metrics.
# e.g.
# eventgate.rdkafka.producer.guaranteed.topics.datacenter1_test_event.partitions.0.msgq_cnt ->
# eventgate_rdkafka_producer_topic_partition_msgq_cnt{partition="0",producer_type="guaranteed",service="eventgate",topic="datacenter1_test_event"}
  - match: '*.rdkafka.producer.*.topics.*.partitions.*.*'
    name: eventgate_rdkafka_producer_topic_partition_${5}
    help: Kafka Producer per topic-partition metric
    labels:
      service: $1
      producer_type: $2
      topic: $3
      partition: $4



##### Kafka Producer topic specificÂ metrics.

# Windowed histograms:
# The last part of the statsd metric starts with 'p'
# e.g.
# eventgate.rdkafka.producer.guaranteed.topics.datacenter1_test_event.batchsize.p99 ->
# eventgate_rdkafka_producer_topic_batchsize_histogram{producer_type="guaranteed",service="eventgate",topic="datacenter1_test_event",quantile="0.99"}
  - match: '([^.]+)\.rdkafka\.producer\.([^.]+)\.topics\.([^.]+)\.([^.]+)\.p(\d\d)'
    match_type: regex
    name: eventgate_rdkafka_producer_topic_${4}_histogram
    help: Kafka Producer per topic metric
    labels:
      service: $1
      producer_type: $2
      topic: $3
      quantile: "0.$5"

# Special cases for 0.9999 rdkafka histogram quantile.
# The last part of the statsd metric starts with 'p'
# e.g.
# eventgate.rdkafka.producer.guaranteed.topics.datacenter1_test_event.batchsize.p99_99 ->
# eventgate_rdkafka_producer_topic_batchsize_histogram{producer_type="guaranteed",service="eventgate",topic="datacenter1_test_event",quantile="0.9999"}
  - match: '([^.]+)\.rdkafka\.producer\.([^.]+)\.topics\.([^.]+)\.([^.]+)\.p(\d\d)_(\d\d+)$'
    match_type: regex
    name: eventgate_rdkafka_producer_topic_${4}_histogram
    help: Kafka Producer per topic metric
    labels:
      service: $1
      producer_type: $2
      topic: $3
      quantile: "0.$5$6"

# Windowed non-histogram stats:
# e.g
# eventgate.rdkafka.producer.guaranteed.topics.datacenter1_test_event.batchsize.max ->
# eventgate_rdkafka_producer_topic_batchsize_max{producer_type="guaranteed",service="eventgate",topic="datacenter1_test_event"}
  - match: '*.rdkafka.producer.*.topics.*.*.*'
    name: eventgate_rdkafka_producer_topic_${4}_${5}
    help: Kafka Producer per topic metric
    labels:
      service: $1
      producer_type: $2
      topic: $3



#### Kafka Producer broker specific metrics

# Simple metrics. These all end in a single metric
# name, e.g. 'outbuf_cnt' instead of 'rtt.avg' or 'rtt.p99'
# e.g.
# eventgate.rdkafka.producer.guaranteed.brokers.mws_mediawiki-vagrant_dev_9092_0.outbuf_msg_cnt. ->
# eventgate_rdkafka_producer_broker_outbuf_msg_cnt{broker_hostname="mws_mediawiki-vagrant_dev",broker_id="0",broker_port="9092",producer_type="guaranteed",service="eventgate"}
  - match: '([^.]+)\.rdkafka\.producer\.([^.]+)\.brokers\.([a-zA-Z0-9-_]+)_(\d+)_([a-zA-Z0-9-_]+)\.([^.]+)$'
    match_type: regex
    name: eventgate_rdkafka_producer_broker_${6}
    help: Kafka Producer per broker metric
    labels:
      service: $1
      producer_type: $2
      broker_hostname: $3
      broker_port: $4
      broker_id: $5

# Windowed histograms:
# The last part of the statsd metric starts with 'p'
# e.g.
# eventgate.rdkafka.producer.guaranteed.brokers.mws_mediawiki-vagrant_dev_9092_0.rtt.p99 ->
# eventgate_rdkafka_producer_broker_rtt_histogram{broker_hostname="mws_mediawiki-vagrant_dev",broker_id="0",broker_port="9092",producer_type="guaranteed",quantile="0.99",service="eventgate"}
  - match: '([^.]+)\.rdkafka\.producer\.([^.]+)\.brokers\.([a-zA-Z0-9-_]+)_(\d+)_([a-zA-Z0-9-_]+)\.([^.]+)\.p(\d\d)$'
    match_type: regex
    name: eventgate_rdkafka_producer_broker_${6}_histogram
    help: Kafka Producer per broker window metric
    labels:
      service: $1
      producer_type: $2
      broker_hostname: $3
      broker_port: $4
      broker_id: $5
      quantile: "0.$7"

# Kafka Producer -> per Broker special cases for 0.9999 rdkafka quantile.
# We need to match 99_99 into 0.9999 quantile label.
# e.g. eventgate.rdkafka.producer.guaranteed.brokers.mws_mediawiki-vagrant_dev_9092_0.rtt.p99_99
# eventgate_rdkafka_producer_broker_rtt_histogram{broker_hostname="mws_mediawiki-vagrant_dev",broker_id="0",broker_port="9092",producer_type="guaranteed",quantile="0.9999",service="eventgate"}
  - match: '([^.]+)\.rdkafka\.producer\.([^.]+)\.brokers\.([a-zA-Z0-9-_]+)_(\d+)_([a-zA-Z0-9-_]+)\.([^.]+)\.p(\d\d)_(\d\d+)$'
    match_type: regex
    name: eventgate_rdkafka_producer_broker_${6}_histogram
    help: Kafka Producer per broker window metric
    labels:
      service: $1
      producer_type: $2
      broker_hostname: $3
      broker_port: $4
      broker_id: $5
      quantile: "0.$7$8"

# Windowed non-histogram stats:
# e.g.
# eventgate.rdkafka.producer.guaranteed.brokers.localhost_9092_bootstrap.throttle.min ->
# eventgate_rdkafka_producer_broker_throttle_min{broker_hostname="mws_mediawiki-vagrant_dev",broker_id="0",broker_port="9092",producer_type="guaranteed",service="eventgate"}
  - match: '([^.]+)\.rdkafka\.producer\.([^.]+)\.brokers\.([a-zA-Z0-9-_]+)_(\d+)_([a-zA-Z0-9-_]+)\.([^.]+)\.([^p][^.]+)$'
    match_type: regex
    name: eventgate_rdkafka_producer_broker_${6}_${7}
    help: Kafka Producer per broker window metric
    labels:
      service: $1
      producer_type: $2
      broker_hostname: $3
      broker_port: $4
      broker_id: $5
