{{- define "config.app" -}}
# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: 2

# Number of workers to start in parallel after the first worker.
# The first worker is always started independently. After it has completed
# its start-up, this number controls the number of workers to start in
# parallel until `num_workers` have been started. Note that setting this
# number to a too high a value might lead to high resource consumption
# (especially of CPU) during the start-up process.
startup_concurrency: 1

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 750

# The maximum interval in ms that can pass between two beat messages
# sent by each worker to the master before it is killed
worker_heartbeat_timeout: 15000

# Logger info
logging:
  level: warn
  name: chromium-render
  streams:
    - type: stdout
      named_levels: true

{{- if .Values.monitoring.enabled }}
# Statsd metrics reporter
metrics:
  name: chromium-render
  host: localhost
  port: 9125
  type: statsd
{{- end }}

services:
  - name: proton
    # a relative path or the name of an npm package, if different from name
    module: ./app.js
    # per-service config
    conf:
      port: {{ .Values.main_app.appbase_url_port }}
      # interface: localhost # uncomment to only listen on localhost
      # more per-service config settings
      # the location of the spec, defaults to spec.yaml if not specified
      # spec: ./spec.template.yaml
      # allow cross-domain requests to the API (default '*')
      cors: '*'
      # to disable use:
      # cors: false
      # to restrict to a particular domain, use:
      # cors: restricted.domain.org
      # content for the CSP headers
      # csp: false  # uncomment this line to disable sending them
      # URL of the outbound proxy to use (complete with protocol)
      #      proxy: http://url-downloader.eqiad.wikimedia.org:8080
      # the list of domains for which not to use the proxy defined above
      # no_proxy_list:
      #   - domain1.com
      #   - domain2.org
      # the list of incoming request headers that can be logged; if left empty,
      # the following headers are allowed: cache-control, content-length,
      # content-type, if-match, user-agent, x-request-id
      # log_header_whitelist:
      #   - cache-control
      #   - content-length
      #   - content-type
      #   - if-match
      #   - user-agent
      #   - x-request-id
      # User-Agent HTTP header to use for requests
      user_agent: Proton/WMF
      # the template used for contacting RESTBase
      restbase_req:
        method: {{ "'{{" }}request.method{{ "}}'" }}
        # uri: {{ .Values.main_app.restbase_uri }}/{{ "{{" }}domain{{ "}}"}}/v1/{+path}
        uri: https://{{ "{{" }}domain{{ "}}"}}/api/rest_v1/{+path}
        query: {{ "'{{" }} default(request.query, {}) {{ "}}'" }}
        headers: {{ "'{{" }}request.headers{{ "}}'" }}
        body: {{ "'{{" }}request.body{{ "}}'" }}
        timeout: 60000
      # the template used for requesting a page from a MediaWiki appserver
      mw_req:
        method: get
        # uri: {{ .Values.main_app.mw_uri }}
        uri: https://{{ "{{" }}extdomain{{ "}}"}}/w/index.php
        headers:
          host: {{ "'{{" }}request.params.domain{{ "}}'" }}
          x-subdomain: {{ "'{{" }}if(request.params.mobile, "M", ""){{ "}}'" }}
        query:
          title: {{ "'{{" }}request.params.title{{ "}}'" }}
      # https://github.com/GoogleChrome/puppeteer/blob/v0.13.0/docs/api.md#pagepdfoptions
      # Explicitly override defaults so that we don't have unexpected results
      # after puppeteer upgrades
      pdf_options:
        scale: 1
        displayHeaderFooter: false
        printBackground: false
        landscape: false
        pageRanges: ''
        format: 'Letter'
        margin:
          top: '0.5in'
          right: '0.5in'
          # some room for page numbers
          bottom: '0.75in'
          left: '0.5in'
      # https://github.com/GoogleChrome/puppeteer/blob/v0.13.0/docs/api.md#puppeteerlaunchoptions
      puppeteer_options:
        timeout: 30000
        headless: true
        executablePath: '/usr/bin/chromium'
        args:
          - '--no-sandbox'
          - '--disable-setuid-sandbox'
          - '--font-rendering-hinting=medium'
          - '--enable-font-antialiasing'
          - '--hide-scrollbars'
          - '--disable-gpu'
          - '--no-first-run'
      # Regexp of domains the browser is not allowed to access during rendering the page.
      # Case-insensitive, gets anchored automatically.
      # host_blacklist: '.*:.*|[\d.]+|.*\.wmnet|gistcdn\.githack\.com'
      # the maximum number of puppeteer instances that can be launched at a time
      render_concurrency: 3
      # don't wait to render a PDF after this many seconds
      render_queue_timeout: 60
      # the number of seconds before puppeteer terminates the browser instance
      render_execution_timeout: 90
      # maximum allowed number of pending jobs
      max_render_queue_size: 50
      queue_health_logging_interval: 3600
{{- end -}}
