# Default values for chromium-render.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
helm_scaffold_version: 0.1 # This can be useful when backporting fixes.
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1
main_app:
  image: wikimedia/mediawiki-services-chromium-render
  version: latest # we use latest everywhere in the defaults.
  port: 3030 # port exposed as a Service, also used by service-checker.
  # Use command and args below to override the entrypoint. Type is arrays
  # Not necessary unless you want to change the entrypoint defined in the docker image
  # Example:
  # command: ["node"]
  # args: ["bin/server.js", "--param1", "arg1"]
  command: ["node"]
  args: ["server.js", "-c", "/etc/chromium-render/config.yaml"]
  # command: ''
  # args: ''
  requests:
    cpu: 4
    memory: 2Gi
  limits:
    cpu: 8
    memory: 3Gi
  liveness_probe:
    tcpSocket:
      port: 3030
  readiness_probe:
    httpGet:
      path: /_info
      port: 3030
monitoring:
  enabled: false
  image_version: latest
service:
  deployment: minikube # valid values are "production" and "minikube"
  port:
    name: http # a unique name of lowercase alphanumeric characters or "-", starting and ending with alphanumeric, max length 63
    # protocol: TCP # TCP is the default protocol
    targetPort: 3030 # the number or name of the exposed port on the container
    port: 3030 # the number of the port desired to be exposed to the cluster
    nodePort: null # you need to define this if "production" is used. In minikube environments let it autoallocate
config:
  public: {} # Add here all the keys that can be publicly available as a ConfigMap
  private: {} # Add here all the keys that should be private but still available as env variables
tls:
  enabled: false
  image_version: 1.13.1-2
  public_port: 4030 # the port where TLS will be exposed
  upstream_timeout: "180.0s"
  # To be defined in a private space
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  # Enable telemetry
  telemetry:
    enabled: false
    port: 9361
# Additional resources if we want to add a port for a debugger to connect to.
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []

networkpolicy:
  egress:
    enabled: false
