# Default values for toolhub.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Version of scaffold used to create this chart
helm_scaffold_version: 0.3

# -- Shared docker settings
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent

resources:
  # -- Number of replicas to run in parallel
  replicas: 1

# -- Shared app settings
main_app:
  type: "default"
  # -- Image name to pull from docker.registry
  image: wikimedia/wikimedia-toolhub
  # -- Image version to pull from docker.registry
  version: latest
  # -- Port exposed as a Service, also used by service-checker.
  port: 8000
  command: []
  args: []
  # -- Initial pod resource limits
  requests:
    cpu: 250m
    memory: 128Mi
  # -- Hard pod resource limits
  limits:
    cpu: 1
    memory: 512Mi
  # -- Pod liveness check settings
  liveness_probe:
    tcpSocket:
      port: 8000
  # -- Pod readiness check settings
  readiness_probe:
    httpGet:
      path: /healthz
      port: 8000

# -- Monitoring config
monitoring:
  enabled: true
  uses_statsd: false

# -- Service config
service:
  # -- Valid values are "production" and "minikube"
  deployment: minikube
  port:
    name: http
    # -- Number or name of the exposed port on the container
    targetPort: 8000
    # -- Number of the port desired to be exposed to the cluster
    port: 8000
    # -- You need to define this if service.deployment="production" is used.
    nodePort: null

config:
  public:
    # -- Name of the settings module for Django to load
    DJANGO_SETTINGS_MODULE: toolhub.settings
    # == Logging ==
    # -- Log event formatter to use
    LOGGING_CONSOLE_FORMATTER: ecs
    # -- List of log handlers to enable
    LOGGING_HANDLERS: console
    # -- Base log level to emit
    LOGGING_LEVEL: WARNING
    # -- 'file' handler output file
    LOGGING_FILE_FILENAME: /dev/null
    # -- Disable warnings from urllib3 about unverfied TLS connections
    URLLIB3_DISABLE_WARNINGS: False
    # == Tracing ==
    # -- HTTP header to extract tracing id from
    LOG_REQUEST_ID_HEADER: HTTP_X_REQUEST_ID
    # -- Header for returning trace id to client
    REQUEST_ID_RESPONSE_HEADER: X-Request-ID
    # -- Header for propigating trace id to services
    OUTGOING_REQUEST_ID_HEADER: X-Request-ID
    # == Development mode ==
    # -- Enable development mode debug features (error pages, etc)
    DJANGO_DEBUG: False
    # -- Local dev only hack. Needs DEBUG=True.
    FIREFOX_DEVTOOL_HACK: False
    # == Security ==
    # -- Comma-separated list of Host/X-Forwarded-Host header allowed values
    DJANGO_ALLOWED_HOSTS: "*"
    # -- Ensure TLS enabled and restrict cookies to https
    REQUIRE_HTTPS: False
    # -- Https redirect hostname
    SSL_CANONICAL_HOST: toolhub.wikimedia.org
    # == Database ==
    DB_ENGINE: django.db.backends.mysql
    DB_NAME: toolhub
    DB_USER: toolhub
    DB_HOST: localhost
    DB_PORT: 3306
    # == Cache ==
    CACHE_BACKEND: django_prometheus.cache.backends.locmem.LocMemCache
    CACHE_LOCATION: ""
    # == Elasticsearch ==
    ES_HOSTS: localhost:9200
    ES_INDEX_REPLICAS: 0
    ES_INDEX_SHARDS: 1
    ES_DSL_AUTOSYNC: True
    ES_DSL_PARALLEL: True
    # == OAuth2 client ==
    # -- OAuth2 request base URL
    WIKIMEDIA_OAUTH2_URL: https://meta.wikimedia.org/w/rest.php
    # -- OAuth2 grant public key.
    # The default value is tied to `http://toolhub.test/` which can only be
    # used in local testing.
    # https://meta.wikimedia.org/wiki/Special:OAuthListConsumers/view/11dec83f263af1b9f480488512556cb1
    WIKIMEDIA_OAUTH2_KEY: 11dec83f263af1b9f480488512556cb1
    # -- HTTP proxy settings to use with OAuth client requests.
    # Toolhub expects value to be semicolon separated list of key=value pairs.
    # See also https://docs.python-requests.org/en/master/user/advanced/#proxies
    SOCIAL_AUTH_PROXIES: ""
    # == Static assets ==
    STATIC_ROOT: /srv/app/staticfiles
    # == HTTP client proxy ==
    # -- Outbound http request proxy
    http_proxy: ""
    # -- Outbound https request proxy
    https_proxy: ""
    # -- Outbound proxy exceptions
    no_proxy: ""
    # -- CA override for intercepting https proxy
    CURL_CA_BUNDLE: ""

  private:
    # -- Django core setting. Used for session signing and as default crypto key
    DJANGO_SECRET_KEY: snakeoil
    # -- MariaDB database password
    DB_PASSWORD: snakeoil
    # -- OAuth2 grant private key.
    # The default value is deliberately public and tied to
    # `http://toolhub.test/` which can only be used in local testing.
    # https://meta.wikimedia.org/wiki/Special:OAuthListConsumers/view/11dec83f263af1b9f480488512556cb1
    WIKIMEDIA_OAUTH2_SECRET: 67e66d1131ed22dc1c79304cae27d04880b16293

# -- TLS terminating ingress configuration
tls:
  enabled: false # Switch to true in production
  # image_version: 1.15.1-2 # image_version is defined globally by SRE. May be overridden here, though.
  public_port: 4011 # the port where TLS will be exposed
  upstream_timeout: "180.0s"
  # To be defined in a private space
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  # Add here, via our "secret" system, the cert/key pairs
  #   cert: "your cert here"
  #   key: "your key here"
  # Enable telemetry
  telemetry:
    enabled: true
    port: 9361

# -- Additional resources if we want to add a port for a debugger to connect to.
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []

# -- Networking settings
networkpolicy:
  egress:
    enabled: false

crawler:
  # -- Enable CronJob for toolinfo url crawler
  enabled: true
  # -- Schedule for crawler job
  schedule: "@hourly"
  # -- Job concurrency policy
  concurrencyPolicy: Forbid

# -- Mcrouter sidecar configuration
mcrouter:
  # -- Enable Mcrouter
  enabled: false
  # -- Zone of this deployment. Used to determine local/remote pools.
  zone: local
  # -- Default route prefix. Should vary based on datacenter.
  route_prefix: local/toolhub
  cross_region_timeout: 250
  cross_cluster_timeout: 100
  num_proxies: 5
  probe_timeout: 60000
  timeouts_until_tko: 3
  resources:
    requests:
      cpu: 200m
      memory: 100Mi
    limits:
      cpu: 1
      memory: 200Mi
  # -- Routes to configure for mcrouter
  routes:
    - route: /local/toolhub
      type: standalone
      failover: true
      pool: test-pool

# -- Optional one-time job to initialize and populate the database with demo
# data.
jobs:
  init_db: false

# -- Optional ingress for use with minikube.
ingress:
  enabled: false
  host: toolhub.test

# -- Optional Elasticsearch single node cluster for use with minikube.
elasticsearch:
  enabled: false
  # https://github.com/elastic/helm-charts/tree/v6.8.18/elasticsearch
  roles:
    master: "true"
    ingest: "false"
    data: "true"
  replicas: 1
  minimumMasterNodes: 1
  esJavaOpts: "-Xms512m -Xmx512m"
  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"

# -- Versions for common sidecar images
common_images:
  mcrouter:
    mcrouter: mcrouter:latest
    exporter: prometheus-mcrouter-exporter:latest

# -- Cruft needed for generated templates/deployment.yaml
php:
  fcgi_mode: unused
