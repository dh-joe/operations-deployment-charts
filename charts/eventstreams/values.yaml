# Default values for EventStreams.

helm_scaffold_version: 0.2 # This can be useful when backporting fixes.
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent

resources:
  replicas: 1

service:
  # valid values are "production" and "minikube" and "none".
  # If "none", no k8s Service will be deployed for this release.
  deployment: minikube
  port:
    # targetPort and port are main_app.port (8092)
    nodePort: 30892
  # Set routed_via to the same (arbitrary) value for all releases that you want
  # this k8s Service to route to.
  # If you don't to deploy a service with a specific release (e.g. a canary), set service.deployment: none
  # routed_via defaults to .Release.Name, so by default a Service will only route to the release it is part of.
  # routed_via:

mesh:
  enabled: false
  image_version: 1.13.1-2
  public_port: 4892 # the port where TLS will be exposed
  # To be defined in a private space
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  telemetry:
    enabled: false
    port: 9361
  upstream_timeout: "0s" # T238658#5961899. Don't override if you don't want premature connection closings.

# EventStreams uses service-runner native prometheus monitoring, not statsd-exporter.
monitoring:
  enabled: true
  # These ports are only used when testing in non production dev env.
  port:
    targetPort: 9102
    port: 9102
    nodePort: 31102

config:
  public: {} # Add here all the keys that can be publicly available as a ConfigMap env variables
  private: {} # Add here all the keys that should be private but still available as env variables

# Additional resources if we want to add a port for a debugger to connect to.
# Debug mode adds the --profile and --inspect flags to the NodeJS service, and
# also deploys a wmfdebug sidecar container in the pod. You can get the v8.log profiling output
# from the pod with e.g (staging):
#   source .hfenv; kubectl cp -n eventstreams -c eventstreams <pod_id>:/tmp/eventstreams-v8.log ./
# You can connect to the Node Inspector on port 9229 for the master service-runner process,
# and port 9230 for the worker process.  Note that if a worker is restarted, it willl
# claim a new port and not be reachable externally.
# You can log into the wmfdebug container with e.g. (staging):
#   source .hfenv; kubectl exec -ti <pod_id> -n eventstreams -c eventstreams bash
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  # 9229 master and 9230 worker will be used by v8 profiler
  ports: [9229, 9230]

main_app:
  # This should uniquely identify your chart's main app's name.
  # In the case where a chart is used for multiple deployments, this
  # should be set to something unique for each one.
  name: eventstreams
  # Don't use docker.registry value for main_app image so we can override
  # and use locally built and cached images via --set main_app.image during development.
  image: docker-registry.wikimedia.org/wikimedia/mediawiki-services-eventstreams
  version: latest
  port: 8092
  command: ["nodejs"]
  args: ["/srv/service/server.js", "-c", "/etc/eventstreams/config.yaml"]

  requests:
    cpu: 100m
    memory: 500Mi
  limits:
    cpu: 1000m
    memory: 1000Mi

  liveness_probe:
    tcpSocket:
      port: 8092
  readiness_probe:
    httpGet:
      path: /_info
      port: 8092

  log_level: info

  # Override this in your service specific values.yaml file
  # to enable Kafka consumer TLS.
  kafka_ca_cert: null

  conf:
    kafka:
      metadata.broker.list: 'kafka.default.svc.cluster.local:31092'
      statistics.interval.ms: 5000
      # Set these to enable Kafka consumer TLS (no authentication, just encryption).
      #security.protocol: ssl
      # These ssl setttings are only used if security.protocol == ssl
      ssl.ca.location: /etc/eventstreams/puppetca.crt.pem
      ssl.cipher.suites: ECDHE-ECDSA-AES256-GCM-SHA384
      ssl.curves.list: P-256
      ssl.sigalgs.list: ECDSA+SHA256

    schema_base_uris:
    - https://schema.discovery.wmnet/repositories/primary/jsonschema
    - https://schema.discovery.wmnet/repositories/secondary/jsonschema
    schema_latest_version: latest

    # This must be set in helmfile values.yaml!
    #stream_config_uri:

networkpolicy:
  egress:
    enabled: false

app:
  port: 8092
