{{- define "config.app" -}}
#
base_uri: {{ .Values.main_app.base_uri }}
cassandra:
{{- $cassandra := .Values.main_app.cassandra -}}
{{- if not (hasKey $cassandra "hostname") }}
{{- $hostname := printf "%s-%s.%s.%s" .Release.Name "cassandra" .Release.Namespace "svc.cluster.local" -}}
{{- $cassandra := set $cassandra "hostname" $hostname -}}
{{- end }}
{{- with .Values.main_app.certs -}}{{- if .cassandra -}}
{{- $tls := dict "ca" "/etc/cassandra-certs/ca.crt" -}}
{{- $cassandra := set $cassandra "tls" $tls -}}
{{- end }}{{ end }}
{{ toYaml $cassandra | indent 2 }}
default_ttl: {{ .Values.main_app.default_ttl }}
listen_address: {{ .Values.main_app.listen_address }}
listen_port: {{ .Values.main_app.port }}
service_name: {{ .Values.main_app.service_name }}
log_level: {{ .Values.main_app.log_level }}
{{- if .Values.main_app.openapi_spec }}
openapi_spec: {{ .Values.main_app.openapi_spec }}
{{- end -}}
{{- with .Values.main_app.certs}}{{- if .kask }}
{{- $tls := dict "cert" "/etc/kask-certs/cert.pem" "key" "/etc/kask-certs/key.pem" }}
tls:
{{ toYaml $tls | indent 2 }}
{{- end }}{{ end -}}
{{- end -}}
