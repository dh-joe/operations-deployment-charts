This is a simple Helm chart that wraps the big yaml file that Kubeflow upstream
provides if one wants to deploy Kfserving standalone (basically model-serving only).

The related InferenceService resources are managed by the kubeflow-kfserving-inference
chart, this one only takes care of the base Kfserving setup.

== TLS certificates ==

There is one TLS certificate that is mandatory for this chart, namely the one
used by the Webhook (upgrade/compatibility between api versions, admission, etc..).
The TLS certificate needs to placed into kfserving-webhook-server-secret (see secret.yaml),
using the following (default) CN/SANS:
- CN: kfserving-webhook-server-service.kfserving-system.svc.cluster.local
- SANs: kfserving-webhook-server-service.kfserving-system.svc,
        kfserving-webhook-server-service.kfserving-system.svc.cluster,
        kfserving-webhook-server-service.kfserving-system.svc.cluster.local
For the moment we create this certificate using the Puppet CA (via cergen).
Please also note that for the moment the target namespace, kfserving-system, needs
to be mentioned in the CN and SANs.

== Inference Services ==

This chart provides the definition of the InferenceService CRD, that allows
the deployment of models and their settings to serve them via Istio/Knative.
The definition of the InferenceService endpoints will be delegated to a separate
chart, kubeflow-kfserving-inference, this one will be used only to spin up
the base Kfserving service and configuration.

== Upgrading ==

The kube-rbac-proxy image is used to add a proxy in front of Prometheus metrics,
usually with something like:
```
- args:
  - --secure-listen-address=0.0.0.0:8443
  - --upstream=http://127.0.0.1:8080/
  - --logtostderr=true
  - --v=10
  image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
  name: kube-rbac-proxy
  ports:
  - containerPort: 8443
    name: https
```
We don't really need it, so it can be safely removed. All the occurrences of port
8443 in the yaml file provided by upstream should be replaced with 8080.

We also don't use cert-manager so the following snippet can be removed as well:
```
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: serving-cert
  namespace: kfserving-system
spec:
  commonName: kfserving-webhook-server-service.kfserving-system.svc
  dnsNames:
  - kfserving-webhook-server-service.kfserving-system.svc
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  secretName: kfserving-webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: kfserving-system
spec:
  selfSigned: {}
```

Together with all annotations like:

```
cert-manager.io/inject-ca-from: kfserving-system/serving-cert
```

The path for the go binary to run for the kfserving controller needs to be changed
from /manager to /usr/bin/manager.

With 0.6 a web-app was introduced, but this chart currently doesn't support it.
Clean up all resources with "kfserving-models-web-app" accordingly.