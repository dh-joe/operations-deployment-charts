{{- define "parsoid-config.app" -}}
# Also see:
# - `npm start -- -h` for more information about passing config files via
#   the commandline.
# - lib/config/ParsoidConfig.js for all the properties that you can configure
#   here. Not all properties are documented here.

# The number of http workers (as opposed to `cpu_workers` below)
num_workers: {{ .Values.config.num_workers }}

worker_heartbeat_timeout: {{ .Values.config.worker_heartbeat_timeout }}

{{ with .Values.config.logging -}}
logging:
{{ toYaml . | indent 2 }}
{{ end -}}

{{ with .Values.config.metrics -}}
metrics:
{{ toYaml . | indent 2 }}
{{ end -}}

services:
  - module: {{ .Values.config.services.module }}
    entrypoint: {{ .Values.config.services.entrypoint }}
    conf:
        # For backwards compatibility, and to continue to support non-static
        # configs for the time being, optionally provide a path to a
        # localsettings.js file.  See localsettings.example.js
        {{ if .Values.config.services.localsettings -}}
        localsettings: {{ .Values.config.services.localsettings }}
        {{ end }}

        # Set your own user-agent string
        # Otherwise, defaults to:
        #   'Parsoid/<current-version-defined-in-package.json>'
        {{ if .Values.config.services.userAgent -}}
        userAgent: {{ .Values.config.servoces.userAgent }}
        {{ end }}

        # Configure Parsoid to point to your MediaWiki instances.
        mwApis:
        - # This is the only required parameter,
          # the URL of you MediaWiki API endpoint.
          uri: '{{ tpl .Values.config.services.uri $ }}'

          # The "domain" is used for communication with Visual Editor
          # and RESTBase.  It defaults to the hostname portion of
          # the `uri` property above, but you can manually set it
          # to an arbitrary string. It must match the "domain" set
          # in $wgVirtualRestConfig.
          {{ if .Values.config.services.domain -}}
          domain: '{{ tpl .Values.config.services.domain $ }}'  # optional
          {{- end }}

          {{ if .Values.config.services.prefix -}}
          prefix: '{{ .Values.config.services.prefix }}'
          {{- end }}

          # To specify a proxy (or proxy headers) specific to this prefix
          # (which overrides defaultAPIProxyURI). Alternatively, set `proxy`
          # to `null` to override and force no proxying when a default proxy
          # has been set.
          #proxy:
          #    uri: 'http://my.proxy:1234/'
          #    headers:  # optional
          #        'X-Forwarded-Proto': 'https'
          {{ with .Values.config.services.proxy -}}
          proxy:
            {{ toYaml . }}
          {{- end }}

          # See below, defaults to true.
          {{ if .Values.config.services.strictSSL -}}
          strictSSL: {{ .Values.config.services.strictSSL }}
          {{- end }}

{{ with .Values.config.services.extraApis -}}
{{ toYaml . | indent 8 }}
{{- end }}

        # Enable using compute workers to parse requests.
        {{ if .Values.config.services.useWorker -}}
        useWorker: {{ .Values.config.services.useWorker }}
        {{- end }}

        # The number of workers in the pool spawned by each http worker to
        # call out for parsing.  Defaults to:
        #   ceil(number of cpus / `num_workers`) + 1
        {{ if .Values.config.services.cpu_workers -}}
        cpu_workers: {{ .Values.config.services.cpu_workers }}
        {{- end }}

        # We pre-define wikipedias as 'enwiki', 'dewiki' etc. Similarly
        # for other projects: 'enwiktionary', 'enwikiquote', 'enwikibooks',
        # 'enwikivoyage' etc.
        # The default for this is false. Set to true if you want to load
        # WMF's config for wikipedias, etc.
        {{ if .Values.config.services.loadWMF -}}
        loadWMF: {{ .Values.config.services.loadWMF }}
        {{- end }}

        # A default proxy to connect to the API endpoints.
        # Default: undefined (no proxying).
        # Overridden by per-wiki proxy config in setMwApi.
        {{ if .Values.config.services.defaultAPIProxyURI -}}
        defaultAPIProxyURI: {{ .Values.config.services.defaultAPIProxyURI }}
        {{- end }}

        # Enable debug mode (prints extra debugging messages)
        {{ if .Values.config.services.debug -}}
        debug: {{ .Values.config.services.debug }}
        {{- end }}

        # Use the PHP preprocessor to expand templates via the MW API (default true)
        {{ if .Values.config.services.usePHPPreProcessor -}}
        usePHPPreprocessor: {{ .Values.config.services.usePHPPreProcessor }}
        {{- end }}

        # Use selective serialization (default false)
        {{ if .Values.config.services.useSelser -}}
        useSelser: {{ .Values.config.services.useSelser }}
        {{- end }}

        # Allow cross-domain requests to the API (default '*')
        # Sets Access-Control-Allow-Origin header
        {{ with .Values.config.services.disable -}}
        disable:
          {{ toYaml . }}
        {{- end }}

        {{  with .Values.config.services.restrict -}}
        restrict:
          {{ toYaml . }}
        {{- end }}

        # Allow override of port/interface:
        {{ if .Values.config.services.serverPort -}}
        serverPort: {{ .Values.config.services.serverPort }}
        {{- end }}

        {{ if .Values.config.services.serverInterface -}}
        serverInterface: {{ .Values.config.services.serverInterface }}
        {{- end }}

        # Enable linting of some wikitext errors to the log
        {{ if .Values.config.services.linting -}}
        linting: {{ .Values.config.services.linting }}
        {{- end }}

        {{ with .Values.config.services.linter -}}
        linter:
          {{ toYaml . }}
        {{- end }}

        # Require SSL certificates to be valid (default true)
        # Set to false when using self-signed SSL certificates
        # Note that this can also be applied per wiki in the mwApis above
        {{ if .Values.config.services.strictSSL -}}
        strictSSL: {{ .Values.config.services.strictSSL }}
        {{- end }}

        # Use a different server for CSS style modules.
        # Leaving it undefined (the default) will use the same URI as the MW API,
        # changing api.php for load.php.
        {{ if .Values.config.services.modulesLoadURI -}}
        modulesLoadURI: {{ .Values.config.services.modulesLoadURI }}
        {{- end }}

{{ with .Values.config.services.extraModules -}}
{{ toYaml . | indent 2 }}
{{- end }}

{{- end -}}
