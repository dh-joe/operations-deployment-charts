# output template used when writing syslog events to kafka. some hints:
#   option.jsonf - format the string as JSON object. This means a leading and trailing curly brace “{”
#                  will be added as well as a comma between all non-terminal properties and constants.
#   name         - rsyslog property name
#   outname      - field name to use when output as json
#   format       - "jsonf" formats as a complete json field
#
#   see https://www.rsyslog.com/doc/v8-stable/configuration/templates.html for additional details
#
template(name="syslog_json" type="list" option.jsonf="on") {
  property(name="timereported"        outname="timestamp" dateformat="rfc3339" format="jsonf")
  property(name="msg"                 outname="message"   format="jsonf")
  property(name="hostname"            outname="host"      format="jsonf")
  property(name="hostname"            outname="logsource" format="jsonf")
  property(name="syslogseverity-text" outname="severity"  format="jsonf")
  property(name="syslogfacility-text" outname="facility"  format="jsonf")
  property(name="programname"         outname="program"   format="jsonf")
}
template(name="ecs_170" type="list" option.jsonf="on") {
  property(name="timereported"        outname="timestamp"                dateformat="rfc3339" format="jsonf")
  property(name="msg"                 outname="message"                  format="jsonf")
  property(name="hostname"            outname="host.name"                format="jsonf")
  property(name="syslogseverity"      outname="log.syslog.severity.code" format="jsonf")
  property(name="syslogseverity-text" outname="log.syslog.severity.name" format="jsonf")
  property(name="syslogseverity-text" outname="log.level"                format="jsonf")
  property(name="syslogfacility"      outname="log.syslog.facility.code" format="jsonf")
  property(name="syslogfacility-text" outname="log.syslog.facility.name" format="jsonf")
  property(name="pri"                 outname="log.syslog.priority"      format="jsonf")
  property(name="programname"         outname="service.type"             format="jsonf")
  constant(value="1.7.0"              outname="ecs.version"              format="jsonf")
}

# Append all properties found by mmjsonparse to "standard" syslog_json fields
# The template cannot use option.json="on" or "$!all-json" property would be json-escaped
template(name="syslog_cee" type="list") {
  constant(value="{")
  property(name="timereported" outname="timestamp" format="jsonf" dateformat="rfc3339")
  constant(value=", ")
  property(name="hostname" outname="logsource" format="jsonf")
  constant(value=", ")
  property(name="hostname" outname="host" format="jsonf")
  constant(value=", ")
  property(name="programname" outname="program" format="jsonf")
  constant(value=", ")
  property(name="syslogseverity-text" outname="severity" format="jsonf")
  constant(value=", ")
  property(name="syslogfacility-text" outname="facility" format="jsonf")
  constant(value=", ")
  # Add the kubernetes-specific data we're collecting
  constant(value="\"kubernetes\": {")
  constant(value="\"host\":\"")
  constant(value=`echo $KUBERNETES_NODE`)
  constant(value="\", ")
  constant(value="\"namespace_name\":\"")
  constant(value=`echo $KUBERNETES_NAMESPACE`)
  constant(value="\", ")
  constant(value="\"pod_name\":\"")
  constant(value=`echo $KUBERNETES_POD_NAME`)
  constant(value="\", ")
  constant(value="\"labels\": {")
  constant(value="\"deployment\":\"")
  constant(value=`echo $KUBERNETES_DEPLOYMENT`)
  constant(value="\", ")
  constant(value="\"release\":\"")
  constant(value=`echo $KUBERNETES_RELEASE`)
  constant(value="\", ")
  # Close the labels and kubernetes hashes
  constant(value="}}")
  # Skip leading curly brace
  property(name="$!all-json" position.from="2")
}
