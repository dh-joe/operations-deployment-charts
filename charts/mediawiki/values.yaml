# Default values for MediaWiki.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
helm_scaffold_version: 0.2 # This can be useful when backporting fixes.
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1
main_app:
  image: placeholder-for-mediawiki-image-name
  version: latest # we use latest everywhere in the defaults.
  port: 8080 # This is the same as php.httpd.port
  # Limits that make sense for a local dev:
  # 1 - 4 Gb of RAM is the minimum for having some APC + opcache for all
  #     the code + 4xncpu workers.
  # For production (i.e. multiversion) installs, you will need:
  # - 400 Mb for opcache (~ 50 Mb for strings)
  # - 1 GB for apcu (maybe something more for appservers)
  # - 500 Mb per worker
  # - 500mi CPU per worker + 500mi for the master process
  requests:
    cpu: 1000m
    memory: 3500Mi # This allows up to 5 workers
  limits:
    cpu: 2000m
    memory: 4000Mi

monitoring:
  # If enabled is true, monitoring annotations will be added to the deployment.
  enabled: false
  # MediaWiki's data can be scraped using named ports only
  named_ports: true
service:
  deployment: minikube # valid values are "production" and "minikube"
  expose_http: false # set this to true if you want to expose both the https and http endpoint
  port:
    name: http # a unique name of lowercase alphanumeric characters or "-", starting and ending with alphanumeric, max length 63
    # protocol: TCP # TCP is the default protocol
    targetPort: 8080 # the number or name of the exposed port on the container
    port: 8080 # the number of the port desired to be exposed to the cluster
    nodePort: null # you need to define this if "production" is used. In minikube environments let it autoallocate
config:
  public: {} # Add here all the keys that can be publicly available as a ConfigMap
  private: {} # Add here all the keys that should be private but still available as env variables

mesh:
  enabled: false # Switch to true in production
  # image_version: 1.15.1-2 # image_version is defined globally by SRE. May be overridden here, though.
  public_port: 4444 # the port where TLS will be exposed
  upstream_timeout: "180.0s"
  # To be defined in a private space
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  # Add here, via our "secret" system, the cert/key pairs
  #   cert: "your cert here"
  #   key: "your key here"
  # Enable telemetry
  telemetry:
    enabled: true
    port: 9361
  # Inject the Ip address of the connecting server, as x-client-ip, to be consumed
  # by mod_remoteip upstream, so that we never end up with REMOTE_ADDR equal to localhost,
  # which triggers a soft block in mediawiki.
  # We chose to append the header because mod_remoteip always uses the first it encounters in the request,
  # so if there is an original one it is preserved. This is more important for access logs than
  # for any functionality. See T297613
  request_headers_to_add:
    - header: "x-client-ip"
      value: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
      append: true

# Additional resources if we want to add a port for a debugger to connect to.
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []
  # By default do not enable this, but by default at least provide a way to
  # dump the $_SERVER variables; this should also be used to inject files into
  # the running deployments for e.g. debugging a production environment.
  php:
    enabled: false
    contents:
      vardump: |-
        <?php
        header("Content-Type: text/plain");
        var_dump($_SERVER);

networkpolicy:
  egress:
    enabled: false

php:
  httpd:
    version: "2.4.38-1-s1"
    port: "8080"
    exporter_version: 0.0.1
    requests:
      cpu: 200m
      memory: 600Mi
    limits:
      cpu: 1
      memory: 800Mi
  fcgi_mode: FCGI_TCP
  exporter_version: 0.0.1
  servergroup: main
  auto_prepend_file: "/srv/mediawiki/wmf-config/PhpAutoPrepend.php"
  # Values for local development
  opcache:
    size: "200" # Megabytes. Probably needs a boost in production
    nofiles: "1000" # Number of files. Definitely needs a boost in production
    interned_strings_buffer: "10" # Megabytes. Memory used to store identical strings
  apc:
    size: "400M" #
  workers: "5" # You need 2 at the very least.
  timeout: "60"
  slowlog_timeout: 0
  display_errors: "Off"
  error_log: "/dev/stderr"
  error_reporting: "30719" #  var_dump(E_ALL & ~E_STRICT);
  devel_mode: false # If true, enables opcache revalidation and catch_workers_output
# See the dockerfiles for the php-fpm base image to know what can be tweaked.
# Those can be passed via config.public above (if the variable name is all
# uppercase)

mw:
  # The datacenter. To be overridden in deployments.
  datacenter: local
  domain_suffix: "local"
  egress:
    database_networks: "10.0.0.0/8"
    etcd_servers: [] # If present, they need to have the form "{ip: <>, port: <>}"
  httpd:
    image_tag: latest
    # Add here any apache configuration you might want to test/preload.
    # It will be loaded before all the rest of conf-available and after modules have loaded.
    # See https://github.com/wikimedia/operations-docker-images-production-images/blob/master/images/MediaWiki/httpd/apache2/apache2.conf
    additional_config: false
  localmemcached:
    # Enable to start memcache daemons in the pod, one for each of the
    # ports listed.  These can serve as placeholders for
    # mcrouter to allow for image testing in non-production
    # environments.  If this section is enabled then the mcrouter
    # sections must be disabled.
    enabled: false
    ports: [11212, 11213]
    resources:
      requests:
        cpu: 200m
        memory: 80Mi
      limits:
        cpu: 200m
        memory: 80Mi
  sites:
    - name: wikipedia.local
      priority: 1
      defaults:
        ensure: present
        public_rewrites: true
      vhosts:
        - name: wikipedia.local
          server_aliases:
            - "*.wikipedia.org"
          docroot: "/srv/mediawiki/docroot/wikipedia.org"
          short_urls: true
          wikibase_rewrites: true
          upload_rewrite:
            domain_catchall: wikipedia.org
            rewrite_prefix: wikipedia
          legacy_rewrites: true
          variant_aliases:
            - sr
            - sr-ec
            - sr-el
            - zh
            - zh-hans
            - zh-hant
            - zh-cn
            - zh-hk
            - zh-my
            - zh-mo
            - zh-sg
            - zh-tw
          additional_rewrites:
            late:
              - "# moved wikistats off NFS"
              - "    RewriteRule ^/wikistats(/(.*$)|$) %{ENV:RW_PROTO}://stats.wikimedia.org/$2
                [R=302,L]"
    - name: static
      priority: 2
      content: |+
        <Virtualhost *:8080>
          Servername test
          ServerAlias test.local
          DocumentRoot /srv/mediawiki/docroot/standard-docroot
        </VirtualHost>
  logging:
    kafka_brokers:
      - host: kafka-host-1
        port: 9001
      - host: kafka-host-2
        port: 6667
    ca_cert_path: /path/to/ca.pem
    rsyslog: false
    debug: false
    allowed_address: 127.0.0.1
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 1
      memory: 300Mi
    udp2log_hostport: somehost:9000
  geoip: true
common_images:
  rsyslogd: rsyslogd:latest
  mcrouter:
    mcrouter: mcrouter:latest
    exporter: prometheus-mcrouter-exporter:latest
  memcached: memcached:latest
  wmfdebug: wmfdebug:latest

app:
  port: 8080

cache:
  mcrouter:
    enabled: false
    resources:
      requests:
        cpu: 200m
        memory: 100Mi
      limits:
        cpu: 1
        memory: 200Mi
    route_prefix: local/mw # change this in production based on datacenter
    cross_region_timeout: 250
    cross_cluster_timeout: 100
    probe_timeout: 60000
    timeouts_until_tko: 3
    num_proxies: 5
    zone: local
    pools:
      - name: test-pool
        zone: local
        servers:
          - 10.10.10.10
          - 10.10.10.11
        failover:
          - 10.10.10.12
      - name: remote-pool
        zone: remote
        servers:
          - 10.100.1.2
          - 10.100.1.3
        failover:
          - 10.100.1.4
    routes:
      # Remember - at least one of your zones must match the route_prefix above
      - route: /local/mw
        failover_time: 600
        pool: test-pool
      - route: /local/mw-wan
        pool: test-pool
        failover_time: 600
        replica:
          route: /remote/mw-wan
          pool: remote-pool
