{{ define "mw.rsyslog.kafka_brokers" }}[{{ range $idx, $el := .Values.mw.logging.kafka_brokers }}{{ if $idx }},{{ end }}"{{ $el.host }}:{{ $el.port }}"{{ end }}]{{ end -}}
{{ define "mw.rsyslog.application" }}
# Provide a UDP syslog input to accept JSON payloads (in the syslog message) and forwards them to

# Kakfa.
# To be recognized as JSON the syslog message must be prepended with "@cee: "
# see also https://www.rsyslog.com/doc/v8-stable/configuration/modules/mmjsonparse.html

# Kafka topic selection is based on the syslog message severity.

module(load="mmjsonparse")
module(load="omkafka")
template(name="udp_localhost_topic" type="string" string="udp_localhost-%syslogseverity-text:::lowercase%")

# Use a separate (in memory) queue to limit message processing to this ruleset only.
ruleset(name="udp_localhost_to_kafka" queue.type="LinkedList") {
  action(type="mmjsonparse" name="mmjsonparse_udp_localhost")

  action(type="omkafka"
         broker={{ template "mw.rsyslog.kafka_brokers" . }}
         topic="udp_localhost_topic"
         dynatopic="on"
         dynatopic.cachesize="1000"
         partitions.auto="on"
         template="syslog_cee"
         queue.type="LinkedList" queue.size="10000" queue.filename="udp_localhost_compat"
         queue.highWatermark="7000" queue.lowWatermark="6000"
         queue.checkpointInterval="5"
         confParam=[ "security.protocol=ssl",
                     "ssl.ca.location={{ .Values.mw.logging.ca_cert_path }}",
                     "compression.codec=snappy",
                     "socket.timeout.ms=60000",
                     "socket.keepalive.enable=true",
                     "queue.buffering.max.ms=50",
                     "batch.num.messages=1000" ]
  )
}

input(type="imudp" port="10514" address="{{ .Values.mw.logging.allowed_address }}" ruleset="udp_localhost_to_kafka")
# For messages generated by php-wmerrors, also ship them to udp2log
# Emulate MediaWiki's wfDebugLog / wfErrorLog format
template(name="MediaWiki" type="string" string="%programname% %timegenerated% %HOSTNAME%: %msg%\n")
if ($programname startswith 'php7.')  then {
    @{{ .Values.mw.logging.udp2log_hostport }};MediaWiki
}
{{ end -}}
{{- define "mw.rsyslog.annotations" -}}
{{- if .Values.mw.logging.rsyslog }}
{{ $tpl := .Files.Get "rsyslog/templates.conf" }}
checksum/rsyslog: {{ include "mw.rsyslog.application" . | printf "%s%s" $tpl | sha256sum }}
{{- end }}
{{- end -}}
{{- if .Values.mw.logging.rsyslog }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "wmf.releasename" . }}-rsyslog-config
  {{- include "mw.labels" . | indent 2}}
data:
  10-templates.conf: |-
{{ .Files.Get "rsyslog/templates.conf" | indent 4 }}
  20-mediawiki.conf: |-
{{ include "mw.rsyslog.application" . | indent 4 }}
{{- end -}}

