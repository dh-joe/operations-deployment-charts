apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  {{- include "base.meta.metadata" (dict "Root" .) | indent 2 }}
spec:
  podSelector:
    matchLabels:
      app: {{ template "base.name.chart" . }}
      release: {{ .Release.Name }}
  policyTypes:
  {{- if .Values.networkpolicy.egress.enabled }}
    - Egress
  {{- end }}
    - Ingress
  ingress:
    - ports:
      {{- include "app.generic.networkpolicy_ingress" . | indent 6 -}}
      {{- include "mesh.networkpolicy.ingress" . | indent 6 }}
{{- if .Values.networkpolicy.egress.enabled }}
  egress:
    {{- include "base.networkpolicy.egress-basic" .Values }}
    {{- include "base.networkpolicy.egress.kafka" . | indent 4 }}
    {{- include "base.networkpolicy.egress.mariadb" . | indent 4 }}
    {{- include "base.networkpolicy.egress.zookeeper" . | indent 4 }}
    {{- include "mesh.networkpolicy.egress" . | indent 4 }}
{{- end }}

{{ include "base.networkpolicy.egress.external-services" . }}

---
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: {{ template "base.name.release" . }}-webserver-ingress
spec:
  types:
    - Ingress
  selector: "app == 'airflow' && component == 'webserver'"
  ingress:
    - action: Allow
      protocol: TCP
      destination:
        ports:
        - {{ $.Values.app.port }}

---
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: {{ template "base.name.release" . }}-scheduler-ingress
spec:
  types:
    - Ingress
  selector: "app == 'airflow' && component == 'scheduler'"
  ingress:
    - action: Allow
      protocol: TCP
      destination:
        ports:
        - {{ $.Values.scheduler.liveness_probe.tcpSocket.port }}
        - {{ $.Values.config.airflow.config.scheduler.scheduler_health_check_server_port }}
        {{- if $.Values.monitoring.enabled }}
        - {{ $.Values.monitoring.prometheus_port }}
        {{- end }}
