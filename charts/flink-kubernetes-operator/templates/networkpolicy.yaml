{{- if or .Values.metrics.port .Values.operatorHealth }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "flink-operator.name" . }}-monitoring
  labels:
    {{- include "flink-operator.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "flink-operator.selectorLabels" . | nindent 6 }}
  policyTypes:
    - Ingress
  ingress:
    - ports:
{{- if .Values.metrics.port }}
      # Metrics
      - port: {{ .Values.metrics.port }}
        protocol: TCP
{{- end }}
{{- if .Values.operatorHealth }}
      # liveness/readiness health check port
      - port: {{ .Values.operatorHealth.port }}
        protocol: TCP
{{- end }}
{{- end }}

{{/* Since we shouldn't modify chart values.yaml, set default networkpolicy.egress.enabled: false */}}
{{ $networkpolicy := default (dict "egress" (dict "enabled" false)) .Values.networkpolicy }}
{{- if $networkpolicy.egress.enabled | default false }}
---
{{/*
NOTE: WMF has imported our vendor/base/network_policy_1.0.0.tpl,
which is not part of upstream flink-kubernetes-operator Helm chart.
See chart README.md.

If you set networkpolicy.egress.enabled: true, you must also set at least
one of networkpolicy.egress.dst_ports or networkpolicy.egress.dst_nets.
*/}}
# Custom egress rules defined in provided .Values.networkpolicy.egress
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "flink-operator.name" . }}-egress-basic
  labels:
    {{- include "flink-operator.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "flink-operator.selectorLabels" . | nindent 6 }}
  policyTypes:
    - Egress
  egress:
    {{- include "base.networkpolicy.egress-basic" .Values }}
    {{- include "base.networkpolicy.egress.zookeeper" $ | nindent 4 }}

---
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: {{ include "flink-operator.name" . }}-k8s-api-calico
  labels:
    {{- include "flink-operator.labels" . | nindent 4 }}
spec:
  types:
    - Egress
  selector: "app.kubernetes.io/name == '{{ include "flink-operator.name" . }}'"
  egress:
    - action: Allow
      destination:
        services:
          name: kubernetes
          namespace: default
{{- end }}


{{- if and .Values.webhook.create }}
---
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: {{ include "flink-operator.name" . }}-webhook-calico
  labels:
    {{- include "flink-operator.labels" . | nindent 4 }}
spec:
  types:
    - Ingress
  selector: "app.kubernetes.io/name == '{{ include "flink-operator.name" . }}'"
  ingress:
    # The webhook port needs to be reachable by Kubernetes Master IPs
    - action: Allow
      protocol: TCP
      source:
        services:
          name: kubernetes
          namespace: default
      destination:
        ports:
          - 9443  # webhook port
{{- end }}



{{- if .Values.watchNamespaces }}
{{/*
Create a NetworkPolicy allowing flink pods in each of watchNamespaces to talk to k8s API.
*/}}
{{- range .Values.watchNamespaces }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: flink-pod-zookeeper
  namespace: {{ . }}
  labels:
    {{- include "flink-operator.labels" $ | nindent 4 }}
spec:
  podSelector:
    matchExpressions:
      # component label is added by Flink Kubernetes Operator
      # NOTE: We would prefer to match on app=flink-app, where flink-app
      # is the value of .Chart.Name there, but the flink-kubernetes-operator
      # sets the app label to chartName-release instead.  Because we can't
      # 100% pick what the release is, we use the Flink component label.
      # See this thread:
      # https://lists.apache.org/thread/dont796lp84vfqnovolryw0y0470mqsv
      - key: component
        operator: In
        values: [jobmanager, taskmanager]
  policyTypes:
    - Egress
  egress:
    {{- include "base.networkpolicy.egress.zookeeper" $ | nindent 4 }}

---
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: flink-pod-k8s-api-calico
  namespace: {{ . }}
  labels:
    {{- include "flink-operator.labels" $ | nindent 4 }}
spec:
  types:
    - Egress
  selector: component in  {'jobmanager', 'taskmanager'}
  egress:
    - action: Allow
      destination:
        services:
          name: kubernetes
          namespace: default

{{- end }}
{{- end }}