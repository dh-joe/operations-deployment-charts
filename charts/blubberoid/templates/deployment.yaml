apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "wmf.releasename" . }}
  labels:
    app: {{ template "wmf.chartname" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "wmf.chartname" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.resources.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "wmf.chartname" . }}
        release: {{ .Release.Name }}
      {{- if .Values.tls.enabled }}
      annotations:
        checksum/tls: {{ printf "%s|%s|%s" .Values.tls.public_port .Values.main_app.port .Values.tls.certs.cert | sha256sum }}
      {{- end }}
    spec:
      {{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 6 }}
      {{- end }}
      containers:
        # The main application container
        - name: {{ template "wmf.releasename" . }}
          image: "{{ .Values.docker.registry }}/{{ .Values.main_app.image }}:{{ .Values.main_app.version }}"
{{- if .Values.main_app.policy.enabled }}
          args: ["--policy", "/etc/blubberoid/policy.yaml"]
{{- end }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          ports:
            - containerPort: {{ .Values.main_app.port }}
          livenessProbe:
{{ toYaml .Values.main_app.liveness_probe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.main_app.readiness_probe | indent 12 }}
          env:
            - name: SERVICE_IDENTIFIER
              value: {{ template "wmf.releasename" . }}
{{- if .Values.main_app.policy.enabled }}
          volumeMounts:
            - name: policy-volume
              mountPath: /etc/blubberoid
{{- end }}
          resources:
            requests:
{{ toYaml .Values.main_app.requests | indent 14 }}
            limits:
{{ toYaml .Values.main_app.limits | indent 14 }}
{{- if .Values.tls.enabled }}
        - name: {{ template "wmf.releasename" . }}-tls-proxy
          image: {{ .Values.docker.registry }}/envoy-tls-local-proxy:{{ .Values.tls.image_version }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          env:
            - name: SERVICE_NAME
              value: {{ .Release.Name }}
            - name: SERVICE_PORT
              value: "{{ .Values.main_app.port }}" # env variables need to be strings
            - name: PUBLIC_PORT
              value: "{{ .Values.tls.public_port }}"
          ports:
            containerPort: {{ .Values.tls.public_port }}
          volumeMounts:
            - name: tls-certs-volume
              mountPath: /etc/envoy/ssl
              readOnly: true
{{- end }}
      volumes:
        {{- if .Values.main_app.policy.enabled }}
        - name: policy-volume
          configMap:
            name: {{ .Release.Name }}-policy
        {{- end }}
        {{- if .Values.tls.enabled }}
        - name: tls-certs-volume
          configMap:
            name: {{ template "wmf.releasename" . }}-tls-proxy-certs
        {{- end }}
