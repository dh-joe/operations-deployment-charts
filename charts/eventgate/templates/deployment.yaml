apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "base.name.release" . }}
  labels:
    app: {{ template "base.name.chart" . }}
    chart: {{ template "base.name.chartid" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "base.name.chart" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.resources.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "base.name.chart" . }}
        release: {{ .Release.Name }}
        routed_via: {{ .Values.routed_via | default .Release.Name }}
      annotations:
        checksum/config: {{ include "config.app" . | sha256sum }}
        {{ if .Values.main_app.stream_config -}}
        checksum/stream-config: {{ include "stream.config" . | sha256sum }}
        {{ end -}}
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
        {{- include "mesh.name.annotations" . | indent 8 }}
    spec:
      {{- if .Values.debug_mode_enabled | default false }}
      shareProcessNamespace: true
      {{- end }}
      {{- if .Values.affinity }}
      {{- toYaml .Values.affinity | nindent 6 }}
      {{- end }}
      containers:
        # The main application container
        - name: {{ .Values.main_app.name }}
          image: "{{ .Values.main_app.image }}:{{ .Values.main_app.version }}"
          command: ["nodejs"]
# If debug_mode, then enable the NodeJS Inspector and save v8 profiling data.
# service-runner master inspector port will be 9229, and worker will be 9230.
{{- if .Values.debug_mode_enabled | default false }}
          args: ["--inspect=0.0.0.0:9229", "--prof", "--logfile=/tmp/{{ .Values.main_app.name }}-v8.log", "--no-logfile-per-isolate", "/srv/service/node_modules/.bin/eventgate", "-c", "/etc/eventgate/config.yaml"]
{{- else }}
          args: ["/srv/service/node_modules/.bin/eventgate", "-c", "/etc/eventgate/config.yaml"]
{{- end }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          ports:
            - containerPort: {{ .Values.app.port }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.app.port }}
{{- if .Values.main_app.conf.test_events | default false }}
          readinessProbe:
            # EventGate should process a test event if it is ready.
            # The GET /v1/_test/events route will process the configured
            # test_events as if they were POSTed to /v1/events.
            httpGet:
              path: /v1/_test/events
              port: {{ .Values.app.port }}
            initialDelaySeconds: 2
{{- end }}
          env:
            - name: SERVICE_IDENTIFIER
              value: {{ .Values.main_app.name }}
{{ if .Values.puppet_ca_crt }}
            - name: NODE_EXTRA_CA_CERTS
              value: /etc/eventgate/puppetca.crt.pem
{{- end }}
          volumeMounts:
            - name: {{ .Values.main_app.name }}-config-volume
              mountPath: /etc/eventgate
          resources:
            requests:
{{ toYaml .Values.main_app.requests | indent 14 }}
            limits:
{{ toYaml .Values.main_app.limits | indent 14 }}
{{- if .Values.wmfdebug_container_enabled | default false }}
        - name: {{ .Values.main_app.name }}-wmfdebug
          image: {{ .Values.docker.registry }}/wmfdebug:latest
          command: ["/bin/bash"]
          args: ["-c", "echo 'Sleeping infinitely...'; sleep infinity;"]
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          # NOTE: SYS_PTRACE in chart here is not working as of 2023-11.
          # PodSecurityPolicy: unable to admit pod: [spec.containers[1].securityContext.capabilities.add: Invalid value: "SYS_PTRACE": capability may not be added]
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
          stdin: true
          tty: true
{{- end }}
        {{- include "mesh.deployment.container" . | indent 8 }}
      volumes:
        - name: {{ .Values.main_app.name }}-config-volume
          configMap:
            name: {{ template "base.name.release" . }}-config
        {{- if .Values.monitoring.enabled }}
        - name: metrics-exporter-config-volume
          configMap:
            name: {{ template "base.name.release" . }}-metrics-exporter-config
        {{- end }}
        {{- include "mesh.deployment.volume" . | indent 8 }}

