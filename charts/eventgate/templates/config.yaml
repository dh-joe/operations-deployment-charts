{{- define "config.app" -}}
# service-runner EventGate app config.yaml.

# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: {{ .Values.main_app.num_workers | default 1 }}

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: {{ .Values.main_app.worker_heap_limit_mb | default 200 }}

# Logger info
logging:
  level:  {{ .Values.main_app.log_level | default "info" }}
  streams:
    - type: stdout
{{- if eq .Values.service.deployment "production" }}
  # Use gelf-stream -> logstash
    - host: logstash.svc.eqiad.wmnet
      port: 12201
      type: gelf
{{- end }}

{{- if .Values.monitoring.enabled }}
# Statsd metrics reporter
metrics:
  name: {{ template "wmf.releasename" . }}
  host: localhost
  port: 9125
  type: statsd
{{- end }}

{{- if .Values.main_app.extra_service_runner_conf }}
{{ toYaml .Values.main_app.extra_service_runner_conf | indent 0 }}
{{- end }}

services:
  - name: {{ template "wmf.releasename" . }}
    # a relative path or the name of an npm package, if different from name
    module: ./app.js
    conf:
      port: {{ .Values.main_app.port }}
      cors: false
      user_agent: {{ template "wmf.releasename" . }}


    # If a validation error is encountered, a validation error event
    # will be produced to this stream.
    # This should be set in release specific values files.
    # In production, this should be prefixed with service name,
    # e.g. eventgate-analytics, eventgate-main
    error_stream: {{ template "wmf.releasename" . }}.error.validation

      # eventgate app settings
{{ toYaml .Values.main_app.conf | indent 6 }}

{{- end }}
