apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "wmf.releasename" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "wmf.chartname" . }}
    chart: {{ template "wmf.chartid" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ template "wmf.chartname" . }}
      # TODO: add the ability to do canary deployments here maybe?
  replicas: {{ .Values.resources.replicas }}
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        release: {{ .Release.Name }}
        app: {{ template "wmf.chartname" . }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
    spec:
      containers:
        # The main application container
        - name: {{ template "wmf.releasename" . }}
          image: "{{ .Values.docker.registry }}/{{ .Values.main_app.image }}:{{ .Values.main_app.version }}"
          command: ["nodejs"]
          args: ["server.js", "-c", "/etc/mathoid/config.yaml"]
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          ports:
            - containerPort: {{ .Values.main_app.port }}
          livenessProbe:
{{ toYaml .Values.main_app.liveness_probe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.main_app.readiness_probe | indent 12 }}
          env:
            - name: SERVICE_IDENTIFIER
              value: {{ template "wmf.releasename" . }}
          {{- range $k, $v := .Values.config.public }}
            - name: {{ $k | upper }}
              value: {{ $v | quote }}
          {{- end }}
          {{- range $k, $v := .Values.config.private }}
            - name: {{ $k | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "wmf.releasename" . }}-secret-config
                  key: {{ $k }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/mathoid
          resources:
            limits:
{{ toYaml .Values.main_app.limits | indent 14 }}
{{- if .Values.logging.enabled }}
        - name: {{ .Release.Name }}-log-collector
          image: {{ .Values.docker.registry }}/fluent-bit:{{ .Values.logging.fluent_bit_version }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          env:
            - name: FLUENTBIT_OUTPUT_MATCH
              value: {{ .Values.logging.output_match | quote }}
            - name: K8S_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          resources:
            limits:
              {{ range $limit, $value := .Values.logging.limits -}}
              {{ $limit }}: {{ $value }}
              {{ end }}
{{- end -}}
{{- if .Values.monitoring.enabled }}
        - name: {{ .Release.Name }}-metrics-exporter
          image: {{ .Values.docker.registry }}/prometheus-statsd-exporter:{{ .Values.monitoring.image_version }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          volumeMounts:
            - name: {{ .Release.Name }}-metrics-exporter
              mountPath: /etc/monitoring
      volumes:
        - name: {{ .Release.Name }}-metrics-exporter
          configMap:
            name: {{ .Release.Name }}-metrics-config
        - name: config-volume
          configMap:
            name: config-{{ .Release.Name }}
{{- end -}}
