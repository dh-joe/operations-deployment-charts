# Default values for miscweb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
helm_scaffold_version: 0.3 # This can be useful when backporting fixes.
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1
main_app:
  # Application type.
  type: "default"
  image: operations-container-miscweb:production
  version: latest # we use latest everywhere in the defaults.
  port: 8080 # port exposed as a Service, also used by service-checker.
  command: []
  args: []
  requests:
    cpu: 100m
    memory: 1024Mi
  limits:
    cpu: 1
    memory: 1024Mi
  liveness_probe:
    tcpSocket:
      port: 8080
  readiness_probe:
    httpGet:
      path: /
      port: 8080
monitoring:
  # If enabled is true, monitoring annotations will be added to the deployment.
  enabled: false
  # If the application emits its metrics using statsd, we need to use the prometheus-statsd exporter
  # For service-runner based apps using service-runner < 2.8, this should be set to true
  uses_statsd: true
  # image_version: latest # image_version is defined globally by SRE. May be overridden here, though.
service:
  deployment: minikube # valid values are "production" and "minikube"
  port:
    name: http
    # protocol: TCP # TCP is the default protocol
    targetPort: 8080 # the number or name of the exposed port on the container
    port: 8080 # the number of the port desired to be exposed to the cluster
    nodePort: null # you need to define this if "production" is used. In minikube environments let it autoallocate
config:
  public: {}
  private: {}

tls:
  enabled: false # Switch to true in production
  # image_version: 1.15.1-2 # image_version is defined globally by SRE. May be overridden here, though.
  public_port: 8080 # the port where TLS will be exposed
  upstream_timeout: "30.0s"
  # To be defined in a private space
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  # Add here, via our "secret" system, the cert/key pairs
  #   cert: "your cert here"
  #   key: "your key here"
  # Enable telemetry
  telemetry:
    enabled: true
    port: 9361

# Additional resources if we want to add a port for a debugger to connect to.
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []

networkpolicy:
  egress:
    enabled: false

