apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "wmf.releasename" . }}
  labels:
    app: {{ template "wmf.chartname" . }}
    chart: {{ template "wmf.chartid" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "wmf.chartname" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.resources.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "wmf.chartname" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include "config.app" . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.tls.enabled }}
        checksum/tls-certs: {{ printf "%v" (values .Values.tls.certs | sortAlpha) | sha256sum }}
        {{- end }}
        {{ if .Values.main_app.jwt }}
        checksum/jwks: {{ include "jwks.config" . | sha256sum }}
        {{ end -}}
        {{ if .Values.nutcracker.enabled -}}
        checksum/nutcracker: {{ include "nutcracker.config" . | sha256sum }}
        {{ end -}}
        {{ if .Values.main_app.ratelimiter -}}
        checksum/ratelimit: {{ include "ratelimit.config" . | sha256sum }}
        {{ end -}}
        {{ if .Values.monitoring.enabled -}}
        checksum/prometheus-statsd: {{ .Files.Get "config/prometheus-statsd.conf" | sha256sum }}
        {{ end -}}
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
        {{ if .Values.main_app.access_log -}}
        {{ if eq .Values.main_app.access_log.type "eventgate" -}}
        checksum/td-agent: {{ include "fluent-bit.config" . | sha256sum }}
        checksum/td-agent-parsers: {{ include "fluent-bit-parsers.config" . | sha256sum }}
        {{- end }}
        {{- end }}
    spec:
      {{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 6 }}
      {{- end }}
      containers:
        # The main application container
        - name: {{ template "wmf.releasename" . }}
          image: "{{ .Values.docker.registry }}/{{ .Values.main_app.image }}:{{ .Values.main_app.version }}"
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          {{- if .Values.main_app.command }}
          command:
            {{- range .Values.main_app.command }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .Values.main_app.args }}
          args:
            {{- range .Values.main_app.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.main_app.port }}
          {{- if .Values.debug.enabled }}
          {{- range .Values.debug.ports }}
            - containerPort: {{ . }}
          {{- end }}{{ end }}
          {{- if .Values.main_app.liveness_probe }}
          livenessProbe:
          {{- toYaml .Values.main_app.liveness_probe | nindent 12 }}
          {{- end }}
          {{- if .Values.main_app.readiness_probe }}
          readinessProbe:
          {{- toYaml .Values.main_app.readiness_probe | nindent 12 }}
          {{- end }}
          env:
            - name: SERVICE_IDENTIFIER
              value: {{ template "wmf.releasename" . }}
          {{- range $k, $v := .Values.config.public }}
            - name: {{ $k | upper }}
              value: {{ $v | quote }}
          {{- end }}
          {{- range $k, $v := .Values.config.private }}
            - name: {{ $k | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "wmf.releasename" $ }}-secret-config
                  key: {{ $k }}
          {{- end }}
          resources:
            requests:
{{ toYaml .Values.main_app.requests | indent 14 }}
            limits:
{{ toYaml .Values.main_app.limits | indent 14 }}
          volumeMounts:
            - name: {{ .Release.Name }}-base-config
              mountPath: /etc/api-gateway/
{{- if .Values.main_app.jwt }}
            - name: {{ .Release.Name }}-jwt-config
              mountPath: /etc/jwks/
{{- end }}
{{- if .Values.tls.enabled }}
            - name: {{ .Release.Name }}-tls-certs-volume
              mountPath: /etc/envoy-ssl
              readOnly: true
{{- end }}
{{- if .Values.main_app.access_log }}
{{- if eq .Values.main_app.access_log.type "eventgate" }}
            - name: {{ .Release.Name }}-varlog
              mountPath: /var/log/
{{- end }}
{{- end }}
{{- with .Values.main_app.volumeMounts }}
{{ toYaml . | indent 12 }}
{{- end }}
{{- if .Values.monitoring.enabled }}
        - name: {{ .Release.Name }}-metrics-exporter
          image: {{ .Values.docker.registry }}/prometheus-statsd-exporter:{{ .Values.monitoring.image_version }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          volumeMounts:
            - name: {{ .Release.Name }}-metrics-exporter
              mountPath: /etc/monitoring
{{- end }}
{{- if .Values.nutcracker.enabled }}
        - name: {{ .Release.Name }}-nutcracker
          image: {{ .Values.docker.registry }}/nutcracker:{{ .Values.nutcracker.version }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          args:
            - "-o"
            - "/dev/stdout"
          ports:
            - containerPort: 6380
          volumeMounts:
            - name: {{ .Release.Name }}-nutcracker-config
              mountPath: /etc/nutcracker
              readOnly: true
{{- end }}
{{- if .Values.main_app.echoapi }}
        - name: {{ .Release.Name }}-echoapi
          image: echoapi:latest
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          ports:
            - containerPort: 8888
{{- end }}
{{- if .Values.main_app.dev_redis }}
        - name: {{ .Release.Name }}-redis
          image: redis:latest
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          ports:
            - containerPort: 6379
{{- end }}
{{- if .Values.main_app.ratelimiter.enabled }}
{{- if not .Values.nutcracker.enabled }}
{{ fail "Cannot start envoy ratelimiter without nutcracker running" -}}
{{- end }}
        - name: {{ .Release.Name }}-ratelimit
          image: {{ .Values.docker.registry }}/ratelimit:{{ .Values.main_app.ratelimiter.version }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          ports:
            - containerPort: 8081
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
          env:
            - name: REDIS_URL
              value: {{ .Values.main_app.ratelimiter.redis_host }}:{{ .Values.main_app.ratelimiter.redis_port }}
            - name: LOG_LEVEL
              value: {{ .Values.main_app.ratelimiter.log_level }}
            - name: RUNTIME_ROOT
              value: /etc
            - name: RUNTIME_SUBDIRECTORY
              value: ratelimit
            - name: USE_STATSD
              value: "{{ .Values.monitoring.enabled }}"
          volumeMounts:
            - name: {{ .Release.Name }}-ratelimit-config
              mountPath: /etc/ratelimit/config.yaml
              subPath: config.yaml
              readOnly: true
{{- end }}
{{- if .Values.main_app.access_log }}
{{- if eq .Values.main_app.access_log.type "eventgate" }}
        - name: {{ .Release.Name }}-logstream-eventgate
          image: {{ .Values.docker.registry }}/fluent-bit:{{ .Values.main_app.access_log.image_version }}
          imagePullPolicy: {{ .Values.docker.pull_policy }}
          args: [ '-c', '/etc/td-agent-bit/td-agent-bit.conf' ]
          volumeMounts:
            - name: {{ .Release.Name }}-varlog
              mountPath: /var/log/
              readOnly: true
            - name: {{ .Release.Name }}-fluent-bit-config
              mountPath: /etc/td-agent-bit
              readOnly: true
{{- end }}
{{- end }}
      volumes:
        - name: {{ .Release.Name }}-base-config
          configMap:
            name: {{ template "wmf.releasename" . }}-base-config
        {{- if .Values.monitoring.enabled }}
        - name: {{ .Release.Name }}-metrics-exporter
          configMap:
            name: {{ template "wmf.releasename" . }}-metrics-config
        {{- end }}
        {{- if .Values.nutcracker.enabled }}
        - name: {{ .Release.Name }}-nutcracker-config
          configMap:
            name: {{ template "wmf.releasename" . }}-nutcracker-config
        {{- end }}
        {{- if .Values.main_app.ratelimiter }}
        - name: {{ .Release.Name }}-ratelimit-config
          configMap:
            name: {{ template "wmf.releasename" . }}-ratelimit-config
        {{- end }}
        {{- if .Values.main_app.jwt }}
        - name: {{ .Release.Name }}-jwt-config
          configMap:
            name: {{ template "wmf.releasename" . }}-jwt-config
        {{- end }}
        {{- if .Values.main_app.access_log }}
        {{- if eq .Values.main_app.access_log.type "eventgate" }}
        - name: {{ .Release.Name }}-varlog
          emptyDir: {}
        - name: {{ .Release.Name }}-fluent-bit-config
          configMap:
            name: {{ template "wmf.releasename" . }}-fluent-bit-config
        {{- end }}
        {{- end }}
        {{- if .Values.tls.enabled }}
        - name: {{ .Release.Name }}-tls-certs-volume
          configMap:
            name: {{ template "wmf.releasename" . }}-tls-proxy-certs
        {{- end }}
{{- with .Values.main_app.volumes }}
{{ toYaml . | indent 8 }}
{{- end }}
