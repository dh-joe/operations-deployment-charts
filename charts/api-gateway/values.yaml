helm_scaffold_version: 0.1 # This can be useful when backporting fixes.
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1
main_app:
  # We use envoy-future here for more recent versions of envoy than
  # are used widely across WMF infrastructure.
  image: envoy-future
  version: latest
  port: 8087
  command: ["/usr/bin/envoy"]
  args: ["-c", "/etc/api-gateway/config.yaml", "-l", "debug"]
  requests:
    cpu: 500m
    memory: 500Mi
  limits:
    cpu: 1
    memory: 800Mi
  liveness_probe:
    tcpSocket:
      port: 8087

  admin_port: null
  jwt: false
  # debug server that echoes requests
  echoapi: false
  ratelimiter:
    enabled: false
    version: latest
    anon_limit:
      requests_per_unit: 500
      unit: HOUR
    default_limit:
      requests_per_unit: 5000
      unit: HOUR
  # Type of access logging
  # - false to turn off access logging
  # - { type: stdout } for access logging to stdout
  # - {
  #     type: eventgate,
  #     event_service: {host: eventgate.discovery.wmnet, port:80, path: /v1/events},
  #     image_version: latest
  #     debug: true
  #   }
  #   to send access logs to an eventgate instance.
  access_log:
    type: stdout

  # populated from secrets
  jwks:
    kid: ""
    key: ""

  endpoints:
    mwapi_cluster:
      type: LOGICAL_DNS
      hosts: []
    restbase_cluster:
      type: LOGICAL_DNS
      hosts: []
    appserver_cluster:
      type: LOGICAL_DNS
      hosts: []

  # run a local redis container for testing - see README for
  # instructions
  dev_redis: false

  #TODO regex on v1
  pathing_map:
    '/core/v1/wikipedia/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wikipedia.org'
      lua_lang: '/core/v1/wikipedia/(%a+)/.*'
    '/core/v1/wiktionary/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wiktionary.org'
      lua_lang: '/core/v1/wiktionary/(%a+)/.*'
    '/core/v1/commons/(\w+)':
      path: '/w/rest.php/v1/\1'
      host: 'commons.wikimedia.org'
      lua_lang: ''
    '/core/v1/wikibooks/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wikibooks.org'
      lua_lang: '/core/v1/wikibooks/(%a+)/.*'
    '/core/v1/wikiquote/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wikiquote.org'
      lua_lang: '/core/v1/wikiquote/(%a+)/.*'
    '/core/v1/wikiversity/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wikiversity.org'
      lua_lang: '/core/v1/wikiversity/(%a+)/.*'
    '/core/v1/mediawiki/(.*)':
      path: '/w/rest.php/v1/\1'
      host: 'mediawiki.org'
      lua_lang: ''
    '/core/v1/wikidata/(.*)':
      path: '/w/rest.php/v1/\1'
      host: 'wikidata.org'
      lua_lang: ''
    '/core/v1/wikisource/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wikisource.org'
      lua_lang: '/core/v1/wikisource/(%a+)/.*'
    '/core/v1/wikivoyage/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wikivoyage.org'
      lua_lang: '/core/v1/wikivoyage/(%a+)/.*'
    '/core/v1/meta/(.*)':
      path: '/w/rest.php/v1/\1'
      host: 'meta.wikimedia.org'
      lua_lang: ''
    '/core/v1/wikinews/(\w+)/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'LANGUAGE.wikinews.org'
      lua_lang: '/core/v1/wikinews/(\w+)/.*'
    '/core/v1/wikispecies/(.*)':
      path: '/w/rest.php/v1/\2'
      host: 'species.wikimedia.org'
      lua_lang: ''
    '/feed/v1/(\w+)/(\w+)/(.*)':
      path: '/api/rest_v1/feed/\3'
      host: 'LANGUAGE.PROJECT.org'
      # This is a horrible hack and we need to remove it whenever we can.
      wikifeeds: true
      lua_lang: '/feed/v1/(%a+)/(%a+)/.*'

nutcracker:
  enabled: false
  version: latest
  port: 6379
  servers: [] # The form is <IP>:<port>:<db> "name" for each element


monitoring:
  enabled: false
  image_version: latest

service:
  deployment: minikube # valid values are "production" and "minikube"
  port:
    name: api-gateway
    targetPort: 8087 # the number or name of the exposed port on the container
    port: 8087 # the number of the port desired to be exposed to the cluster
    nodePort: null
config:
  public: {}
  private: {}

tls:
  enabled: false
  certs:
    cert: "snakeoil"
    key: "snakeoil"

debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []

# Enable networkpolicy egress rules
networkpolicy:
  egress:
    enabled: false
