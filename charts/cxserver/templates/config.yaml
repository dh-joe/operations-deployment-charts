{{- define "config.app" -}}
# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: 1

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 300

# The maximum interval in ms that can pass between two beat messages
# sent by each worker to the master before it is killed
worker_heartbeat_timeout: 7500

# Logger info
logging:
  name: cxserver
  streams:
    - type: stdout
    - host: logstash.svc.eqiad.wmnet
      level: warn
      port: 12201
      type: gelf

{{- if .Values.monitoring.enabled }}
# Statsd metrics reporter
metrics:
  name: cxserver
  host: localhost
  port: 9125
  type: statsd
{{- end }}

# TODO: Figure this out in production
{{- if eq .Values.service.deployment "minikube" }}
ratelimiter:
  type: kademlia
  seeds: [{{ template "wmf.releasename" . }}-kademlia.default.svc.cluster.local]
  listen:
    port: {{ .Values.main_app.kademlia_port }}
{{- end }}

services:
  - name: cxserver
    module: app.js
    conf:
      cors: "*"
      port: {{ .Values.main_app.port }}
      user_agent: CXServer/WMF
      # the template used for contacting mediawiki
      mwapi_req:
        body: {{ "'{{" }} request.body {{ "}}'" }}
        query: {{ "'{{" }} default(request.query, {}) {{ "}}'" }}
        headers:
          host: {{ "'{{" }} request.params.domain {{ "}}'" }}
          user-agent: {{ "'{{" }} user-agent {{ "}}'" }}
        method: post
        uri: http://{{ .Values.main_app.mw_host }}/w/api.php
      # the template used for contacting RESTBase
      restbase_req:
        method: {{ "'{{" }}request.method{{ "}}'" }}
        query: {{ "'{{" }} default(request.query, {}) {{ "}}'" }}
        headers: {{ "'{{" }} request.headers {{ "}}'" }}
        body: {{ "'{{" }} request.body {{ "}}'" }}
        uri: http://{{ .Values.main_app.restbase_host }}/{{ "{{" }}domain{{ "}}"}}/v1/{+path}
      {{ if .Values.main_app.proxy -}}
      proxy: {{ .Values.main_app.proxy }}
      {{ end -}}
      {{ if .Values.main_app.no_proxy_list -}}
      no_proxy_list:
      {{ range $i := .Values.main_app.no_proxy_list -}}
        - {{ $i }}
      {{ end -}}
      {{ end -}}
      {{ if .Values.main_app.jwt_secret -}}
      jwt:
        algorithms:
          - HS256
        secret: {{ .Values.main_app.jwt_secret }}
      {{ end -}}
      ratelimiter_key: {{ .Values.main_app.ratelimiter_key }}
      ratelimiter_rate: {{ .Values.main_app.ratelimit_rate }}
      languages: config/languages.yaml
      mt:
{{ toYaml .Values.main_app.mt | indent 8 }}
      dictionary:
        JsonDict:
          languages: config/JsonDict.yaml
{{- end }}
