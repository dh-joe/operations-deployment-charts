helmBinary: helm3
helmDefaults:
  createNamespace: false
  verify: false
  atomic: true
  timeout: 600
  force: false
  recreatePods: false
  args:
    - "--kubeconfig=/etc/kubernetes/ores-legacy-deploy-{{ .Environment.Name }}.config"

# Please note: you might not need to declare all of these releases.
environments:
  ml-serve-eqiad:
    values:
      - releases: [main]
  ml-serve-codfw:
    values:
      - releases: [main]
  ml-staging-codfw:
    values:
      - releases: [main]

---

templates:
  default: &default
    namespace: ores-legacy
    chart: wmf-stable/python-webapp
    recreatePods: {{ if (hasKey .Environment.Values "roll_restart") }}{{ eq .Environment.Values.roll_restart "1" }}{{ else }}false{{end}}
    # This template gets applied for every release, all of which are applied in
    # every environment. The installedTemplate line below is how we guarantee
    # we only install the appropriate release in each enviornment.
    # If you don't define environment.values.releases for an environment,
    # this template will fail and raise an error.
    installedTemplate: '{{`{{ if hasKey .Environment.Values "releases" }}{{ has .Release.Name .Environment.Values.releases }}{{ else }}{{ "no releases defined for this environment" | fail }}{{end}}`}}'
    missingFileHandler: Warn
    values:
      # general default values, controlled by SRE
      - "/etc/helmfile-defaults/general-{{ .Environment.Name }}.yaml"
      # non-env-specific values, in this repository
      - "values.yaml"
      # prod-specific secrets, controlled by SRE
      - "/etc/helmfile-defaults/private/ml-serve_services/ores-legacy/{{ .Environment.Name }}.yaml"
      # env-specific overrides
      - "values-{{ .Environment.Name }}.yaml"
      # release-specific overrides
      - "values-{{`{{ .Release.Name }}`}}.yaml"
    hooks:
      - events: ["presync"]
        command: "helmfile_log_sal"
        args:
          [
            "{{`{{.HelmfileCommand}}`}}",
            "[{{ .Environment.Name }}] '{{`{{.HelmfileCommand}}`}}' command on namespace '{{`{{.Release.Namespace}}`}}' for release '{{`{{.Release.Name}}`}}' .",
          ]


releases:
  - name: main
    <<: *default
