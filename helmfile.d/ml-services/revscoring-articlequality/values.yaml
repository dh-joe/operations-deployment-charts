docker:
  registry: docker-registry.discovery.wmnet/wikimedia
  imagePullPolicy: IfNotPresent

networkpolicy:
  egress:
    enabled: true
    # We should use the egress gateway by default to call endpoints.
    # In this case, we allow the pods to call the Swift endpoint directly.
    dst_nets:
      - cidr: 10.2.1.54/32 # thanos-swift.svc.codfw.wmnet
        ports:
        - port: 443
          protocol: tcp
      - cidr: 10.2.2.54/32 # thanos-swift.svc.eqiad.wmnet
        ports:
        - port: 443
          protocol: tcp

monitoring:
  enabled: true

inference:
  annotations:
    sidecar.istio.io/inject: "false"
  predictor:
    image: "machinelearning-liftwing-inference-services-articlequality"
    version: "2021-12-09-053243-production"
  transformer:
    image: "machinelearning-liftwing-inference-services-articlequality-transformer"
    version: "2021-12-17-183428-production"
    # The articlequality models are needed on the transformer pods
    # due to how feature extraction is implemented.
    # We need to set the config value below to allow the transformers to be able
    # to fetch the Secret containing the S3/Swift credentials.
    # See also the STORAGE_URI vars that we set for each inference_services
    # transformer entry.
    config:
      serviceAccountName: "kserve"
    base_env:
      - name: WIKI_URL
        value: "https://istio-egressgateway.istio-system.svc.cluster.local"
      - name: REQUESTS_CA_BUNDLE
        value: "/etc/ssl/certs/wmf-ca-certificates.crt"

inference_services:
  - name: "enwiki-articlequality"
    predictor:
      custom_env:
        - name: INFERENCE_NAME
          value: "enwiki-articlequality"
        - name: STORAGE_URI
          value: "s3://wmf-ml-models/articlequality/enwiki/20211022183902/"
    transformer:
      custom_env:
        - name: WIKI_HOST
          value: "en.wikipedia.org"
        - name: STORAGE_URI
          value: "s3://wmf-ml-models/articlequality/enwiki/20211022183902/"
