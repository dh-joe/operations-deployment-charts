docker:
  registry: docker-registry.discovery.wmnet/wikimedia
  imagePullPolicy: IfNotPresent

networkpolicy:
  egress:
    enabled: true
    # We should use the egress gateway by default to call endpoints.
    # In this case, we allow the pods to call the Swift endpoint directly.
    dst_nets:
      - cidr: 10.2.1.54/32 # thanos-swift.svc.codfw.wmnet
        ports:
        - port: 443
          protocol: tcp
      - cidr: 10.2.2.54/32 # thanos-swift.svc.eqiad.wmnet
        ports:
        - port: 443
          protocol: tcp

monitoring:
  enabled: true

inference:
  annotations:
    sidecar.istio.io/inject: "false"
  predictor:
    image: "machinelearning-liftwing-inference-services-draftquality"
    version: "2021-12-10-062751-production"
    base_env:
      - name: WIKI_URL
        value: "https://istio-egressgateway.istio-system.svc.cluster.local"
      - name: REQUESTS_CA_BUNDLE
        value: "/etc/ssl/certs/wmf-ca-certificates.crt"
  transformer:
    image: "machinelearning-liftwing-inference-services-draftquality-transformer"
    version: "2022-01-21-165450-publish"
    base_env:
      - name: WIKI_URL
        value: "https://istio-egressgateway.istio-system.svc.cluster.local"
      - name: REQUESTS_CA_BUNDLE
        value: "/etc/ssl/certs/wmf-ca-certificates.crt"

inference_services:
  - name: "enwiki-draftquality"
    predictor:
      custom_env:
        - name: INFERENCE_NAME
          value: "enwiki-draftquality"
        - name: WIKI_HOST
          value: "en.wikipedia.org"
        - name: STORAGE_URI
          value: "s3://wmf-ml-models/draftquality/enwiki/202107141649/"
    transformer:
      image: "machinelearning-liftwing-inference-services-draftquality-transformer"
      image_version: "2022-01-21-165450-publish"
      custom_env:
        - name: WIKI_HOST
          value: "en.wikipedia.org"
