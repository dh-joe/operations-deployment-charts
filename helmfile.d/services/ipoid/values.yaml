docker:
  registry: docker-registry.discovery.wmnet
app:
  port: 6927
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 1
    memory: 400Mi
  version: 2024-10-29-113619-production
  image: repos/mediawiki/services/ipoid
monitoring:
  enabled: false
  image_version: latest
resources:
  replicas: 1
service:
  deployment: production

config:
  public:
    MYSQL_HOST: m5-master.eqiad.wmnet
    MYSQL_PORT: 3306
    MYSQL_DATABASE: ipoid
    MYSQL_RW_USER: ipoid_rw
    MYSQL_RO_USER: ipoid_ro
    TMPDIR: "/tmp"
    DATADIR: "/tmp/ipoid"
  private: {}
cronjobs:
  daily-updates:
    # n.b. toggle this flag in values-eqiad.yaml, not here.
    enabled: false
    command:
      - ./main.sh
      - "--updatedb"
      - "true"
      - "--debug"
      - "false"
    # At 8 AM, 1PM and 6PM each day.
    # We schedule multiple runs, because if one job fails,
    # we want to allow the next one to repair the incomplete state
    # of the previous job, ideally while still on the same date.
    # If the second job has repaired the first, we want the third
    # job to run the full import for the current day.
    schedule: "0 8,13,18 * * *"
    concurrency: Forbid
    # In practice, this seems to result in a single retry attempt.
    # Keep this, so that we can try to fix a failed import as soon
    # as possible.
    # Sometimes, the import container gets stuck (T373427), set
    # a deadline for the container to finish. Set conservatively
    # to 24 hours, as a typical import is ~3-4 hours, but imports
    # that recover from failures on previous days may take longer.
    activeDeadlineSeconds: 86400
    backoffLimit: 2
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 1
        memory: 8Gi
  initial-import:
    # n.b. toggle this flag in values-eqiad.yaml, not here.
    enabled: false
    command:
      - ./main.sh
      - "--init"
      - "true"
      - "--debug"
      - "false"
    schedule: "8 11 17 11 *" # 1st of Nov every year
    concurrency: Forbid
    backoffLimit: 1
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 1
        memory: 8Gi
networkpolicy:
  egress:
    enabled: true
ingress:
  enabled: true
mesh:
  enabled: true
  certmanager:
    enabled: true
# Allow to reach out to WMF MariaDB m5 section
mariadb:
  egress:
    sections: ["m5"]
