service:
  deployment: production
  port: 34192


networkpolicy:
  egress:
    enabled: true

mesh:
  enabled: true
  public_port: 4492 # the port where TLS will be exposed

discovery:
  # List of listeners. These should match service mesh endpoint names
  # (defined in https://gerrit.wikimedia.org/g/operations/puppet/+/refs/heads/production/hieradata/common/profile/services_proxy/envoy.yaml)
  listeners:
    - mwapi-async # used for EventStreamConfig API endpoint.
    - schema

resources:
  replicas: 8

main_app:
  name: eventgate-main
  version: 2023-06-22-124213-production
  limits:
    memory: 600Mi # https://phabricator.wikimedia.org/T249745#6689046
  conf:
    kafka:
      conf:
        security.protocol: ssl
      guaranteed:
        conf:
          # GuaranteedProducer does block HTTP clients, so we attempt to send
          # the produce request as soon as possible, rather than waiting
          # for larger batches.
          # Override for T338357:
          # We want to test a more lenient value to allow messages to be batched
          # up to some milliseconds, rather than sending them as they arrive.
          # This will add a small latency delay in the producer,
          # but it should decrease pressure on the Kafka Broker side.
          queue.buffering.max.ms: 10
    schema_base_uris:
    - "file:///srv/service/schemas/event/primary/jsonschema/"
    - "file:///srv/service/schemas/event/secondary/jsonschema/"
    - "http://localhost:6023/repositories/primary/jsonschema/"   # schema service mesh port
    - "http://localhost:6023/repositories/secondary/jsonschema/" # schema service mesh port

    schema_precache_uris:
    - /error/1.0.0
    - /test/event/1.0.0
    - /change-prop/retry/1.0.0
    - /change-prop/continue/1.0.0
    - /resource_change/1.0.0
    - /mediawiki/page/change/1.0.0
    - /mediawiki/page/move/1.0.0
    - /mediawiki/page/restrictions-change/1.0.0
    - /mediawiki/page/delete/1.0.0
    - /mediawiki/page/links-change/1.0.0
    - /mediawiki/page/properties-change/1.0.0
    - /mediawiki/page/undelete/1.0.0
    - /mediawiki/recentchange/1.0.0
    - /mediawiki/user/blocks-change/1.0.0
    - /mediawiki/centralnotice/campaign/change/1.0.0
    - /mediawiki/centralnotice/campaign/delete/1.0.0
    - /mediawiki/centralnotice/campaign/create/1.0.0
    - /mediawiki/job/1.0.0
    - /mediawiki/revision/visibility-change/1.0.0
    - /mediawiki/revision/score/2.0.0
    - /mediawiki/revision/tags-change/1.0.0
    - /mediawiki/revision/create/1.0.0
    - /mediawiki/revision/create/1.1.0
    - /mediawiki/revision/recommendation-create/1.0.0
    - /mediawiki/page/image-suggestions-feedback/1.0.0
    - /mediawiki/page/change/1.1.0


    # Request static stream config during startup from the EventStreamConfig extension
    # MW API endpoint for all streams with destination_event_service == eventgate-main
    # We use meta.wikimedia.org here as the default stream configuration wiki.
    # Streams can be configured per wiki in mediawiki-config, but they should always be at
    # least configured with a stream name and schema_title available from meta.wikimedia.org.
    # NOTE: Request config from MW internal api.svc and set Host to meta.wikimedia.org.
    stream_config_uri: 'http://localhost:6500/w/api.php?format=json&action=streamconfigs&constraints=destination_event_service=eventgate-main'
    stream_config_uri_options: {'headers': {'Host': 'meta.wikimedia.org'}}
    # Only request stream configs once at startup.
    stream_config_is_dynamic: false
    # Expect the stream -> settings map in the response at this subobject key
    stream_config_object_path: streams

    # If test_events is set, EventGate will set up a /v1/_test/events
    # route that will process these test_events as if they were POSTed
    # to /v1/events. This is used for the k8s readinessProbe.
    # IMPORTANT:
    # If you are using stream config, make sure this stream is configured!
    # If using local stream config, the _stream-config.yaml template
    # will automatically configure an <main_app.name>.test.event stream,
    # so in your helmfiles you should override this to a test event
    # that prodcues to that stream.  If you are using remote
    # stream config, you must configure these streams explicitly there.
    test_events:
    - $schema: /test/event/1.0.0
      meta:
          # make sure this is configured in stream config if you are using it.
        stream: eventgate-main.test.event
