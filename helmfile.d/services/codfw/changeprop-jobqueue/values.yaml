main_app:
  version: v0.9.5
  port: 7200

  limits:
    memory: 1000Mi

  log_level: info

  site: codfw

  kafka:
    broker_list:
      - kafka-main2001.codfw.wmnet:9093
      - kafka-main2002.codfw.wmnet:9093
      - kafka-main2003.codfw.wmnet:9093
    ssl: true

  liveness_probe:
    tcpSocket:
      port: 7200

  redis:
    host: localhost
    port: 6379

  jobqueue:
    jobrunner_uri: https://jobrunner.discovery.wmnet/rpc/RunSingleJob.php
    videoscaler_uri: https://videoscaler.discovery.wmnet/rpc/RunSingleJob.php

    # All the jobs listed below get their own rule, which transfers to
    # their own processing unit - each type of job listed explicitly is processed
    # by a separate worker in change-prop.
    high_traffic_jobs_config:
      ThumbnailRender:
        enabled: true
        concurrency: 20
      categoryMembershipChange:
        enabled: true
        concurrency: 200
      # CNDPurge is quite low-volume, but it uses delayed execution,
      # so avoid putting it together with other low-volume jobs so that it doesn't
      # block execution for others.
      cdnPurge:
        enabled: true
        concurrency: 5
      ORESFetchScoreJob:
        enabled: true
        concurrency: 20
      # RecordLinks is normally low-volume, but could have big spikes
      # when maintenance scripts are run. Elevated concurrency
      RecordLintJob:
        enabled: true
        concurrency: 50
        consumer_batch_size: 10
      wikibase-addUsagesForPage:
        enabled: true
        concurrency: 5
      constraintsRunCheck:
        enabled: true
        concurrency: 30
      fetchGoogleCloudVisionAnnotations:
        enabled: true
        concurrency: 10
        # All the jobs of this kind are delayed exactly 48 hours, so we don't want
        # the reenqueue feature to kick in.
        reenqueue_delay: 259200
      # For cirrus search jobs the retries are built into the job itself,
      # so disable the retries by change-prop. We need special rules for cirrus
      # jobs because they need special configuration.
      cirrusSearchCheckerJob:
        enabled: true
        disable_delayed_execution: true #T198462
        retry_limit: 0
        concurrency: 20
      cirrusSearchDeleteArchive:
        enabled: true
        retry_limit: 0
        concurrency: 5
      cirrusSearchDeletePages:
        enabled: true
        retry_limit: 0
        concurrency: 5
      cirrusSearchIncomingLinkCount:
        enabled: true
        retry_limit: 0
        concurrency: 15
      cirrusSearchLinksUpdate:
        enabled: true
        retry_limit: 0
        concurrency: 300
      cirrusSearchLinksUpdatePrioritized:
        enabled: true
        retry_limit: 0
        concurrency: 150
      cirrusSearchOtherIndex:
        enabled: true
        retry_limit: 0
        concurrency: 5

    # Videoscaler jobs point to a different LVS, so they need special treatment
    # as well - thus special rules.
    videoscaler_jobs_config:
      webVideoTranscode:
        enabled: true
        timeout: 86400000
        concurrency: 50
      webVideoTranscodePrioritized:
        enabled: true
        concurrency: 30
        timeout: 86400000

    # Some jobs require partitioning according to MariaDB shards.
    partitioned_jobs_config:
      refreshLinks:
        enabled: true
        # Partition jobs by mediawiki database cluster (s1, s2, etc.)
        partitioner_kind: mediawiki_database
        # This is the concurrency for the partitioner
        # itself, it's does not actually touch Mediawiki, only re-enqueues the
        # jobs according to proper partitions
        partitioner_concurrency: 200
        partition:
          # This is the concurrency of the individual partitions, so overall concurrency
          # is 8 * 20 = 160
          concurrency: 20
          # Abandon jobs which root job is more than 1 week long
          root_claim_ttl: 604800
      htmlCacheUpdate:
        enabled: true
        # Partition jobs by mediawiki database cluster (s1, s2, etc.)
        partitioner_kind: mediawiki_database
        partitioner_concurrency: 50
        partition:
          # This is the concurrency of the individual partitions, so overall concurrency
          # is 8 * 4 = 32
          # The load of htmlCacheUpdate is uneven across partitions, so we are using a bit
          # higher overall concurrency then needed.
          concurrency: 4
          # Abandon jobs which root job is more than 1 week long
          root_claim_ttl: 604800
      cirrusSearchElasticaWrite:
        enabled: true
        partitioner_kind: cirrussearch_cluster
        partitioner_concurrency: 50
        partition:
          # This is the concurrency of the individual partitions, so overall concurrency
          # is 100 * 3 = 300
          concurrency: 100
          reenqueue_delay: 3600
          retry_limit: 0

    # All the jobs not explicitly specified in the config are combined into the
    # `low_traffic_jobs` rule, so they share a worker. The low_traffic_concurrency
    # is shared between all the jobs other then the exceptions listed above.
    #
    # Most of the topics are empty most of the time, so a lot of slots are just waiting
    # for the `consume` method to timeout and do nothing.
    # So a significantly higher concurrency is needed to account for that.
    low_traffic_jobs:
      enabled: true
      concurrency: 50

nutcracker:
  enabled: true
  servers:
    - rdb2003.codfw.wmnet:6379:1 "cp-1"
    - rdb2005.codfw.wmnet:6379:1 "cp-2"

monitoring:
  enabled: true
  image_version: 0.0.5

resources:
  # To be increased as we enable more features
  replicas: 12

service:
  name: "cpjobqueue"
  deployment: "production"
  port:
    name: cpjobqueue
    nodePort: 7200

networkpolicy:
  egress:
    enabled: true
    dst_nets:
    - cidr: 10.192.0.17/32 # kafka-main2001
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.192.16.8/32 # kafka-main2002
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.192.32.136/32 # kafka-main2003
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:860:101:10:192:0:17/128 # kafka-main2001
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:860:102:10:192:16:8/128 # kafka-main2002
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:860:103:10:192:32:136/128 # kafka-main2003
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.0.200/32 # kafka-main1001
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.16.37/32 # kafka-main1002
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.32.90/32 # kafka-main1003
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:101:10:64:0:200/128 # kafka-main1001
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:102:10:64:16:37/128 # kafka-main1002
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:103:10:64:32:90/128 # kafka-main1003
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.2.2.26/32 # jobrunner.svc.eqiad.wmnet
      ports:
      - protocol: tcp
        port: 443
    - cidr: 10.2.1.26/32 # jobrunner.svc.codfw.wmnet
      ports:
      - protocol: tcp
        port: 443
    - cidr: 10.2.2.5/32 # videoscaler.svc.eqiad.wmnet
      ports:
      - protocol: tcp
        port: 443
    - cidr: 10.2.1.5/32 # videoscaler.svc.codfw.wmnet
      ports:
      - protocol: tcp
        port: 443
    - cidr: 10.192.16.122/32 # rdb2003
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.192.32.133/32 # rdb2005
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.64.0.24/32 # rdb1005
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.64.16.76/32 # rdb1009
      ports:
      - protocol: tcp
        port: 6379

metrics:
  name: cpjobqueue
