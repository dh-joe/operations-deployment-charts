main_app:

  image: envoy-future
  version: 1.18.3-2
  telemetry_port: 1667

  jwt:
    enabled: true
    issuer: https://meta.wikimedia.org

  ratelimiter:
    enabled: true
    version: 1.5.1-s4
    log_level: debug
    redis_host: localhost
    redis_port: 6379
    redis_pass: ""
    prefixes_without_required_jwt:
      - prefix: "/wiki/"
      - prefix: "/w/"
      - path: "/"
      - prefix: "/service/lw/inference"

  strip_api_cookies: true

  access_log:
    sample_percentage: 1
  # Disable until we can get reliable logging to stdout *and* to eventgate.
  #  type: eventgate
  #  image_version: 1.5.3-3

  endpoints:
    appserver_cluster:
      debug_hosts:
        mwdebug1001.eqiad.wmnet: 443
        mwdebug1002.eqiad.wmnet: 443
        mwdebug2001.codfw.wmnet: 443
        mwdebug2002.codfw.wmnet: 443
    restbase_cluster:
      type: LOGICAL_DNS
      tls: true
      hosts:
        restbase.discovery.wmnet: 7443
    mwapi_cluster:
      debug_hosts:
        mwdebug1001.eqiad.wmnet: 443
        mwdebug1002.eqiad.wmnet: 443
        mwdebug2001.codfw.wmnet: 443
        mwdebug2002.codfw.wmnet: 443
    mobileapps_cluster:
      type: LOGICAL_DNS
      tls: true
      hosts:
        mobileapps.discovery.wmnet: 4102
  discovery_endpoints:
    linkrecommendation:
      tls: true
      port: 4006
      timeout: 30s
      path: linkrecommendation

    # AQS services
    device_analytics:
      tls: true
      port: 4972
      timeout: 15s
      path: metrics/unique-devices
      internal_host: device-analytics.discovery.wmnet
      full_path_trim: /service/

    # Models/endpoints on Lift Wing (run by ML Team)
    # The `lw/` prefix is just convention, and does not have any
    # more technical relevance than e.g. using lw-inference would.
    # Inference models, e.g.
    # https://api.wikimedia.org/services/lw/inference/v1/models/enwiki-articlequality:predict
    #
    # The regex `\w+` refers to typical wiki language prefixes, like `en`
    # in enwiki. Some wikis have longer names, with `eswikiquote` being the
    # longest.
    lw_inference_articletopic:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/(\w+)wiki-(article|item)topic:predict'
      host_rewrite_path: '\1wiki-\2topic.revscoring-articletopic.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    # This model does not have submodels for specific wikis, so we don't
    # need a regex, and can just use the `host` attribute
    lw_inference_articletopic_outlink:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/outlink-topic-model:predict'
      host: 'outlink-topic-model.articletopic-outlink.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    lw_inference_articlequality:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/(\w+)wiki-(article|item)quality:predict'
      host_rewrite_path: '\1wiki-\2quality.revscoring-articlequality.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    lw_inference_drafttopic:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/(\w+)wiki-drafttopic:predict'
      host_rewrite_path: '\1wiki-drafttopic.revscoring-drafttopic.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    lw_inference_draftquality:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/(\w+)wiki-draftquality:predict'
      host_rewrite_path: '\1wiki-draftquality.revscoring-draftquality.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    lw_inference_editquality_damaging:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/(\w+)wiki-damaging:predict'
      host_rewrite_path: '\1wiki-damaging.revscoring-editquality-damaging.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    lw_inference_editquality_goodfaith:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/(\w+)wiki-goodfaith:predict'
      host_rewrite_path: '\1wiki-goodfaith.revscoring-editquality-goodfaith.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    lw_inference_editquality_reverted:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/(\w+)wiki-reverted:predict'
      host_rewrite_path: '\1wiki-reverted.revscoring-editquality-reverted.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 100000

    lw_inference_revertrisk:
      tls: true
      port: 30443
      timeout: 30s
      path: 'lw/inference/v1/models/revertrisk-([\w-]+):predict'
      host_rewrite_path: 'revertrisk-\1.revertrisk.wikimedia.org'
      full_path_trim: "/service/lw/inference/"
      internal_host: inference.discovery.wmnet
      # Total requests / hour allowed for a single IP
      # (either logged in with OAuth - default - or not - anon)
      ratelimit_config:
        anon_limit: 50000
        default_limit: 200000

  aqs:
    device_analytics:
      path: unique-devices


  #TODO regex on v1
  pathing_map:
    mwapi_cluster:
      '/core/v1/wikipedia/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wikipedia.org'
      '/core/v1/wiktionary/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wiktionary.org'
      '/core/v1/commons/(.*)':
        path: '/w/rest.php/v1/\1'
        host: 'commons.wikimedia.org'
      '/core/v1/wikibooks/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wikibooks.org'
      '/core/v1/wikiquote/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wikiquote.org'
      '/core/v1/wikiversity/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wikiversity.org'
      '/core/v1/mediawiki/(.*)':
        path: '/w/rest.php/v1/\1'
        host: 'www.mediawiki.org'
      '/core/v1/wikidata/(.*)':
        path: '/w/rest.php/v1/\1'
        host: 'www.wikidata.org'
      '/core/v1/wikisource/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wikisource.org'
      '/core/v1/wikivoyage/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wikivoyage.org'
      '/core/v1/meta/(.*)':
        path: '/w/rest.php/v1/\1'
        host: 'meta.wikimedia.org'
      '/core/v1/wikinews/(\w+)/(.*)':
        path: '/w/rest.php/v1/\2'
        host: '\1.wikinews.org'
      '/core/v1/wikispecies/(.*)':
        path: '/w/rest.php/v1/\1'
        host: 'species.wikimedia.org'

  readiness_probe:
    httpGet:
      path: /healthz
      port: 8087
      scheme: HTTPS


service:
  deployment: production
  port:
    nodePort: 8087

mesh:
  enabled: true

nutcracker:
  enabled: true
  version: 0.0.4

# Only used by ratelimiter for metrics - envoy uses prometheus native metrics
monitoring:
  enabled: true

networkpolicy:
  egress:
    enabled: true
    dst_nets:
    - cidr: 10.64.32.123/32 # mwdebug1001
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.64.0.46/32 # mwdebug1002
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.192.0.98/32 # mwdebug2001
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.192.16.66/32 # mwdebug2002
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.2.2.22/32 # api-rw.discovery.wmnet LVS endpoint (eqiad)
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.2.1.22/32 # api-rw.discovery.wmnet LVS endpoint (codfw)
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.2.2.1/32 # appservers-rw.discovery.wmnet LVS endpoint (eqiad)
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.2.1.1/32 # appservers-rw.discovery.wmnet LVS endpoint (codfw)
      ports:
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 80
    - cidr: 10.192.0.198/32 # rdb2007
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.192.16.213/32 # rdb2008
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 2620:0:860:101:10:192:0:198/128 # rdb2007
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 2620:0:860:102:10:192:16:213/128 # rdb2008
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.192.32.8/32 # rdb2009
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.192.48.6/32 # rdb2010
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 2620:0:860:103:10:192:32:8/128 # rdb2009
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 2620:0:860:104:10:192:48:6/128 # rdb2010
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.64.0.36/32 # rdb1011
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.64.16.76/32 # rdb1009
      ports:
      - protocol: tcp
        port: 6379
    - cidr: 10.2.1.45/32 # eventgate-main.svc.codfw.wmnet
      ports:
        - protocol: tcp
          port: 4492
    - cidr: 10.2.2.45/32 # eventgate-main.svc.eqiad.wmnet
      ports:
        - protocol: tcp
          port: 4492
    - cidr: 10.2.1.14/32 # mobileapps.svc.codfw.wmnet
      ports:
        - protocol: tcp
          port: 4102
    - cidr: 10.2.2.14/32 # mobileapps.svc.eqiad.wmnet
      ports:
        - protocol: tcp
          port: 4102
    - cidr: 10.2.2.23/32 # linkrecommendation.discovery.wmnet (eqiad)
      ports:
        - protocol: tcp
          port: 4006
    - cidr: 10.2.1.23/32 # linkrecommendation.discovery.wmnet (codfw)
      ports:
        - protocol: tcp
          port: 4006
    - cidr: 10.2.2.63/32 # inference.discovery.wmnet (eqiad)
      ports:
        - protocol: tcp
          port: 30443
    - cidr: 10.2.1.63/32 # inference.discovery.wmnet (codfw)
      ports:
        - protocol: tcp
          port: 30443
    - cidr: 10.2.2.80/32 # device-analytics.discovery.wmnet (eqiad)
      ports:
        - protocol: tcp
          port: 4972
    - cidr: 10.2.1.80/32 # device-analytics.discovery.wmnet (codfw)
      ports:
        - protocol: tcp
          port: 4972
