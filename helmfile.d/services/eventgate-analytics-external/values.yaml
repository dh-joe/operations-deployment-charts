service:
  deployment: production
  port: 36192
  routing_tag: eventgate-analytics-external

tls:
  enabled: true
  public_port: 4692 # the port where TLS will be exposed

resources:
  replicas: 24

main_app:
  name: eventgate-analytics-external
  version: 2022-09-20-153227-production
  requests:
    memory: 300Mi
  limits:
    memory: 400Mi
  conf:
    kafka:
      conf:
        # NOTE: The kafka brokers list is set in site specific values files.
        #metadata.broker.list:
        # Enforce a smaller message size limit for this externally accessible eventgate instance.
        message.max.bytes: 1048576
        # Enable Kafka producer TLS (no authentication, just encryption).
        security.protocol: ssl
        ssl.ca.location: /etc/ssl/certs/wmf-ca-certificates.crt

    schema_precache_uris:
    - /error/1.0.0
    - /test/event/1.0.0

    # http://schema.discovery.wmnet hosts up to date clones of our
    # event schema repositories. Since eventgate-analytics-external needs to be more dynamic without
    # new schemas and versions, it is configured to only use the remote schema repos.
    schema_base_uris:
    - 'https://schema.discovery.wmnet/repositories/primary/jsonschema/'
    - 'https://schema.discovery.wmnet/repositories/secondary/jsonschema/'

    # If test_events is set, EventGate will set up a /v1/_test/events
    # route that will process these test_events as if they were POSTed
    # to /v1/events. This is used for the k8s readinessProbe.
    # IMPORTANT:
    # If you are using stream config, make sure this stream is configured!
    # If using local stream config, the _stream-config.yaml template
    # will automatically configure an <main_app.name>.test.event stream,
    # so in your helmfiles you should override this to a test event
    # that prodcues to that stream.  If you are using remote
    # stream config, you must configure these streams explicitly there.
    test_events:
    - $schema: /test/event/1.0.0
      meta:
          # make sure this is configured in stream config if you are using it.
        stream: eventgate-analytics-external.test.event

    # Request dynamic stream config from the EventStreamConfig extension MW API endpoint.
    # We use meta.wikimedia.org here as the default stream configuration wiki.
    # Streams can be configured per wiki in mediawiki-config, but they should always be at
    # least configured with a stream name and schema_title available from meta.wikimedia.org.
    # NOTE: Request config from MW internal api.svc and set Host to meta.wikimedia.org.
    # NOTE: we need all_settings, otherwise we will not receive the stream's schema_title, which
    # is what EventGate needs to verify that an event of a given schema is allowed in a stream.
    stream_config_uri: 'https://api-ro.discovery.wmnet/w/api.php?format=json&action=streamconfigs&all_settings=true&constraints=destination_event_service=eventgate-analytics-external&streams=<%= streams %>'
    stream_config_uri_streams_delimiter: '|'
    stream_config_uri_options: {'headers': {'Host': 'meta.wikimedia.org'}}    # Re-request for yet unknown streams at runtime
    # Expect the stream -> settings map in the response at this subobject key
    stream_config_object_path: streams
    stream_config_is_dynamic: true
    # Expire and re-request dynamic stream configs every 5 minutes
    stream_config_ttl: 300
    stream_config_recache_on_expire: true
    stream_config_precache_list:
    - eventgate-analytics-external.test.event
    - eventgate-analytics-external.error.validation

networkpolicy:
  egress:
    enabled: true
    dst_nets:
    - cidr: 10.64.0.175/32 # kafka-jumbo1001
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.0.176/32 # kafka-jumbo1002
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.16.99/32 # kafka-jumbo1003
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.32.159/32 # kafka-jumbo1004
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.32.160/32 # kafka-jumbo1005
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.48.117/32 # kafka-jumbo1006
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.32.106/32 # kafka-jumbo1007
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.48.121/32 # kafka-jumbo1008
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 10.64.48.140/32 # kafka-jumbo1009
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:101:10:64:0:175/128 # kafka-jumbo1001
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:101:10:64:0:176/128 # kafka-jumbo1002
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:102:10:64:16:99/128 # kafka-jumbo1003
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:103:10:64:32:159/128 # kafka-jumbo1004
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:103:10:64:32:160/128 # kafka-jumbo1005
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:107:10:64:48:117/128 # kafka-jumbo1006
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:103:10:64:32:106/128 # kafka-jumbo1007
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:107:10:64:48:121/128 # kafka-jumbo1008
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093
    - cidr: 2620:0:861:107:10:64:48:140/128 # kafka-jumbo1009
      ports:
      - protocol: tcp
        port: 9092
      - protocol: tcp
        port: 9093

    # Allow schema.svc.{eqiad,codfw} for eventgate-analytics
    - cidr: 10.2.2.43/32 # schema.svc.eqiad.wmnet
      ports:
      - protocol: tcp
        port: 8190
      - protocol: tcp
        port: 443
    - cidr: 10.2.1.43/32 # schema.svc.codfw.wmnet
      ports:
      - protocol: tcp
        port: 8190
      - protocol: tcp
        port: 443
    # Allow api-ro
    - cidr: 10.2.2.22/32
      ports:
      - protocol: tcp
        port: 443
    - cidr: 10.2.1.22/32
      ports:
      - protocol: tcp
        port: 443

