app:
  config_files:
    app.config.properties:
      pipeline.name: cirrus-streaming-updater-consumer-search-staging
      kafka-source-config.group.id: cirrus-streaming-updater-consumer-search-staging
      fetch-error-topic: eqiad.cirrussearch.update_pipeline.fetch_error
      elasticsearch-urls.chi: https://relforge1003.eqiad.wmnet:9243/
      elasticsearch-urls.omega: https://relforge1003.eqiad.wmnet:9443/
      elasticsearch-urls.psi: https://relforge1003.eqiad.wmnet:9643/
      # We have a catch-all route that sends all the unknown urls to mw api.
      # To get around it we need to spell these out here even though they do nothing
      http-routes.00-chi: https://relforge1003.eqiad.wmnet:9243/.*=https://relforge1003.eqiad.wmnet:9243
      http-routes.00-omega: https://relforge1003.eqiad.wmnet:9443/.*=https://relforge1003.eqiad.wmnet:9443
      http-routes.00-psi: https://relforge1003.eqiad.wmnet:9643/.*=https://relforge1003.eqiad.wmnet:9643

discovery:
  listeners:
    - mw-api-int-async-ro
    - schema
    - thanos-swift # cluster for checkpoints

networkpolicy:
  egress:
    dst_nets:
      # relforge1003
      - cidr: 10.64.5.37/32
        ports:
         - port: 9243
           protocol: TCP
         - port: 9443
           protocol: TCP
         - port: 9643
           protocol: TCP
      - cidr: 2620:0:861:104:10:64:5:37/128
        ports:
         - port: 9243
           protocol: TCP
         - port: 9443
           protocol: TCP
         - port: 9643
           protocol: TCP
      # relforge1004
      - cidr: 10.64.21.126/32
        ports:
         - port: 9243
           protocol: TCP
         - port: 9443
           protocol: TCP
         - port: 9643
           protocol: TCP
      - cidr: 2620:0:861:105:10:64:21:126/128
        ports:
         - port: 9243
           protocol: TCP
         - port: 9443
           protocol: TCP
         - port: 9643
           protocol: TCP
