# WMF kubernetes cluster specific values.
# These are kept out of the main values.yaml just so that it is easier to use
# with local development.

app:
  jobManager:
    resource:
      memory: 4096m

  taskManager:
    resource:
      memory: 4096m

  env:
    - name: SCHEMA_URIS
      # This app only needs the primary schema repo
      # In a future improvement, we should bake a checkout of this repo into the
      # app image and load schemas from the local filesystem.
      value: https://schema.discovery.wmnet/repositories/primary/jsonschema/
    - name: STREAM_CONFIG_URI
      value: https://meta.wikimedia.org/w/api.php
      # HTTP_CLIENT_ROUTE will be used to
      # route STREAM_CONFIG_URI to a different endpoint, but using the same
      # HTTP Host header.
    - name: HTTP_CLIENT_ROUTE
      value: https://api-ro.discovery.wmnet

# KUBERNETES_SERVICE_HOST is defaulted by k8s to the ClusterIP
# of the kubernetes apiserver Service.  We need to set it
# to a name that is in the apiserver's TLS cert.
# kubernetes.default.svc.cluster.local should always resolve to
# the right one within the k8s cluster.
kubernetesApi:
  host: kubernetes.default.svc.cluster.local

mesh:
  enabled: false

networkpolicy:
  egress:
    enabled: true
    dst_nets:
      # Allow schema.svc.{eqiad,codfw}.
      # TODO: When we deploy this to production wikikube, we should
      # bake the schema repo into the app image just like we do for eventgate-main.
      - cidr: 10.2.2.43/32 # schema.svc.eqiad.wmnet
        ports:
        - protocol: tcp
          port: 8190
        - protocol: tcp
          port: 443
      - cidr: 10.2.1.43/32 # schema.svc.codfw.wmnet
        ports:
        - protocol: tcp
          port: 8190
        - protocol: tcp
          port: 443

# We are consuming and producing to jumbo-eqiad in dse-k8s.
# When we move to wikikube, we will use main kafka clusters.
kafka:
  allowed_clusters: [jumbo-eqiad]
