
releases:
  - name: namespaces
    chart: wmf-stable/raw
    namespace: kube-system
    needs:
      - kube-system/coredns
    values:
      - templates:
      {{- range $namespace, $values := .Environment.Values.namespaces }}
          - |
            apiVersion: v1
            kind: Namespace
            metadata:
              name: {{ $namespace }}
              annotations:
                net.beta.kubernetes.io/network-policy: '{"ingress":{"isolation":"DefaultDeny"}}'
          - |
            # Bind the deploy user to the view Role for this namespace
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              name: deploy
              namespace: {{ $namespace }}
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: view
            subjects:
              - apiGroup: rbac.authorization.k8s.io
                kind: User
                name: {{ $values | getOrNil "deployUser" | default $namespace }}
          - |
            # Bind the deploy user and all service account of this namespace to
            # the allow-restricted-psp role, see helmfile_psp.yaml
            {{- $pspClusterRole := $values | getOrNil "pspClusterRole" | default "allow-restricted-psp"}}
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              name: allow-psp
              namespace: {{ $namespace }}
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: {{ $pspClusterRole }}
            subjects:
              - apiGroup: rbac.authorization.k8s.io
                kind: Group
                name: system:serviceaccounts:{{ $namespace }}
              - apiGroup: rbac.authorization.k8s.io
                kind: User
                name: {{ $values | getOrNil "deployUser" | default $namespace }}
          - |
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: tiller
              namespace: {{ $namespace }}
          - |
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              name: tiller
              namespace: {{ $namespace }}
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: {{ $values | getOrNil "tillerClusterRole" | default "tiller" }}
            subjects:
              - kind: ServiceAccount
                name: tiller
                namespace: {{ $namespace }}
      {{ $limitranges := $values | getOrNil "limitranges" | default $.Environment.Values.limitranges }}
      {{- with $limitranges}}
          - |
            apiVersion: v1
            kind: LimitRange
            metadata:
              name: general-limits
              namespace: {{ $namespace }}
            spec:
              limits:
                - min:
                    cpu: {{ .container.min.cpu  | quote }}
                    memory: {{ .container.min.memory | quote }}
                  max:
                    cpu: {{ .container.max.cpu  | quote }}
                    memory: {{ .container.max.memory | quote }}
                  defaultRequest:
                    cpu: {{ .container.defaultRequest.cpu | quote }}
                    memory: {{ .container.defaultRequest.memory | quote }}
                  default:
                    cpu: {{ .container.default.cpu | quote}}
                    memory: {{ .container.default.memory | quote }}
                  type: Container
                - min:
                    cpu: {{ .pod.min.cpu | quote }}
                    memory: {{ .pod.min.memory | quote }}
                  max:
                    cpu: {{ .pod.max.cpu | quote }}
                    memory: {{ .pod.max.memory | quote }}
                  type: Pod
      {{- end }}
      {{ $resourcequota := $values | getOrNil "resourcequota" | default $.Environment.Values.resourcequota }}
      {{- with $resourcequota }}
          - |
            apiVersion: v1
            kind: ResourceQuota
            metadata:
              name: quota-compute-resources
              namespace: {{ $namespace }}
            spec:
              hard:
                {{- if .pods  }}
                pods: {{ .pods | quote }}
                {{- end }}
                requests.cpu: {{ .compute.requests.cpu  | quote}}
                requests.memory: {{ .compute.requests.memory | quote }}
                limits.cpu: {{ .compute.limits.cpu | quote }}
                limits.memory: {{ .compute.limits.memory | quote }}
      {{- end }}
      {{/* Deploy tiller into each namespace */}}
          - |
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: tiller
              namespace: {{ $namespace }}
              labels:
                app: helm
                name: tiller
            spec:
              progressDeadlineSeconds: 600
              replicas: 1
              revisionHistoryLimit: 10
              selector:
                matchLabels:
                  app: helm
                  name: tiller
              strategy:
                rollingUpdate:
                  maxSurge: 1
                  maxUnavailable: 1
                type: RollingUpdate
              template:
                metadata:
                  labels:
                    app: helm
                    name: tiller
                spec:
                  containers:
                  - name: tiller
                    image: {{ $.Environment.Values.tillerImage | quote }}
                    imagePullPolicy: IfNotPresent
                    env:
                      - name: TILLER_NAMESPACE
                        value: {{ $namespace }}
                      - name: TILLER_HISTORY_MAX
                        value: "0"
                      - name: KUBERNETES_SERVICE_HOST
                        value: {{ $.Environment.Values.kubernetesApi.host | quote }}
                      - name: KUBERNETES_SERVICE_PORT
                        value: {{ $.Environment.Values.kubernetesApi.port | quote }}
                    {{- $resources := $values | getOrNil "tiller_resources" | default false }}
                    {{- if $resources }}
                    resources:
                      requests:
                        cpu: {{ $resources.requests.cpu }}
                        memory: {{ $resources.requests.memory }}
                      limits:
                        cpu: {{ $resources.limits.cpu }}
                        memory: {{ $resources.limits.memory }}
                    {{- end }}
                    livenessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /liveness
                        port: 44135
                        scheme: HTTP
                      initialDelaySeconds: 1
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                    ports:
                      - containerPort: 44134
                        name: tiller
                        protocol: TCP
                      - containerPort: 44135
                        name: http
                        protocol: TCP
                    readinessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /readiness
                        port: 44135
                        scheme: HTTP
                      initialDelaySeconds: 1
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                  dnsPolicy: ClusterFirst
                  restartPolicy: Always
                  schedulerName: default-scheduler
                  serviceAccount: tiller
                  serviceAccountName: tiller
                  terminationGracePeriodSeconds: 30
      {{- end }} {{/* end range namespaces */}}
      {{/* Deploy a PriorityClass ResourceQuota object to permitted namespaces */}}
      {{- range $namespace := .Environment.Values.allowCriticalPodsInNamespace }}
          - |
            apiVersion: v1
            kind: ResourceQuota
            metadata:
              name: priorityclass
              namespace: {{ $namespace }}
            spec:
              scopeSelector:
                matchExpressions:
                  - operator: In
                    scopeName: PriorityClass
                    values:
                      - system-cluster-critical
                      - system-node-critical
      {{- end }} {{/* end range allowCriticalPodsInNamespace */}}