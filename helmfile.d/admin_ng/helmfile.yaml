environments:
  eqiad:
    values:
      - "values/common.yaml"
      - "values/main.yaml"
      - "values/{{ .Environment.Name }}/values.yaml"
  codfw:
    values:
      - "values/common.yaml"
      - "values/main.yaml"
      - "values/{{ .Environment.Name }}/values.yaml"
  staging-eqiad:
    values:
      - "values/common.yaml"
      - "values/main.yaml"
      - "values/{{ .Environment.Name }}/values.yaml"
  staging-codfw:
    values:
      - "values/common.yaml"
      - "values/main.yaml"
      - "values/{{ .Environment.Name }}/values.yaml"
  # Machine Learning clusters
  ml-serve-eqiad:
    values:
      - "values/common.yaml"
      - "values/ml-serve.yaml"
      - "values/{{ .Environment.Name }}/values.yaml"
      - install_knative: true
  ml-serve-codfw:
    values:
      - "values/common.yaml"
      - "values/ml-serve.yaml"
      - "values/{{ .Environment.Name }}/values.yaml"
      - install_knative: true

---
bases:
  - helmfile_rbac.yaml
  - helmfile_psp.yaml
  - calico/helmfile.yaml
  - coredns/helmfile.yaml
  - helmfile_namespaces.yaml
  - eventrouter/helmfile.yaml
  - knative-serving/helmfile.yaml

hooks:
  - events: ["prepare"]
    command: "helmfile_log_sal"
    args:
      [
        "{{`{{.HelmfileCommand}}`}}",
        "[{{ .Environment.Name }}] START helmfile.d/admin '{{`{{.HelmfileCommand}}`}}'.",
      ]
  - events: ["cleanup"]
    command: "helmfile_log_sal"
    args:
      [
        "{{`{{.HelmfileCommand}}`}}",
        "[{{ .Environment.Name }}] DONE helmfile.d/admin '{{`{{.HelmfileCommand}}`}}'.",
      ]
---
helmBinary: helm3
helmDefaults:
  verify: false
  atomic: true
  timeout: 600
  recreatePods: false
  force: false
  args:
    - "--kubeconfig=/etc/kubernetes/admin-{{ .Environment.Name }}.config"
