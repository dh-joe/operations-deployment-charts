kubernetesMasters:
  cidrs:
    - '10.192.16.93/32'
    - '2620:0:860:102:10:192:16:93/128'
    - '10.192.48.64/32'
    - '2620:0:860:104:10:192:48:64/128'
# Override policies from ../ml-serve.yaml
GlobalNetworkPolicies:
  allow-pod-to-pod:
    egress:
      - action: Allow
        destination:
          nets:
            # codfw
            - "10.194.61.0/24"
      - action: Allow
        destination:
          nets:
            # codfw
            - "2620:0:860:302::/64"

# Override DNS name on certs to refer to staging endpoint
namespaces:
  knative-serving:
    # Note: We rely on ChangeProp to call LiftWing upon certain
    # Kafka events are emitted. Due to how nodejs works
    # (see https://github.com/nodejs/node/issues/37104) it is
    # not possible to call our inference endpoints with
    # custom HTTP Host headers, unless there are some special
    # SANs in the TLS certificate to support them.
    tlsHostnames:
      - inference-staging
  revertrisk:
    deployClusterRole: deploy-kserve
    deployTLSCertificate: false
    labels:
      istio-injection: enabled

limitranges:
  container:
    max:
      memory: "30Gi"
  pod:
    max:
      memory: "32Gi"

kubernetesVersion: "1.23"

istio:
  gateways:
    ingressgateway:
      ports:
        - 8443
        # knative-local-gateway (not exposed via NodePort),
        # only for internal traffic.
        - 8081

# Override for T353622
coredns:
  rewrite_actions:
    # Measure to deal with https://phabricator.wikimedia.org/T318814
    # By default Kubernetes DNS records have 5s TTL, and in a Service Mesh
    # like Istio this means causing a lot of DNS queries from Envoy to refresh
    # every TTL seconds all the Clusters with STRICT_DNS settings.
    continue:
    - 'ttl exact knative-local-gateway.istio-system.svc.cluster.local. 30'
    - 'ttl regex (.*).discovery.wmnet 30'
    - 'ttl regex (.*)-(predictor|transformer)-default-(.*) 30'
    # Avoid IPv6 lookups, see T353622
    stop:
    - 'type AAAA A'

# Override for T353622
net_istio:
  mesh:
    service_entries:
    - name: mediawiki-api-ro
      spec:
        hosts:
        - api-ro.discovery.wmnet
        ports:
        - name: http-port
          # This port is used by the Destination Rule for TLS egress origination
          number: 80
          protocol: HTTP
          targetPort: 443
        - name: https-port
          number: 443
          protocol: HTTPS
        resolution: DNS
    - name: mw-api-int-ro
      spec:
        hosts:
        - mw-api-int-ro.discovery.wmnet
        ports:
        - name: http-port
          # This port is used by the Destination Rule for TLS egress origination
          number: 4680
          protocol: HTTP
          targetPort: 4446
        - name: https-port
          number: 4446
          protocol: HTTPS
        resolution: DNS
    # This is a test for T353622
    # The goal is to enable a more "transparent"
    # proxy mesh config for the isvc pods.
    # The domains below, for the moment, will need
    # to be kept in sync with the correspondent Virtual Service
    # rule. Once/if this test will reach production, we'll be able
    # to have only one list (replicated everywhere with Yaml anchors
    # in ml-serve.yaml).
    # This list is needed to instruct the Istio sidecar that
    # HTTP connections related to these domains on port 80 shouldn't
    # be forwarded to their real upstreams, but handled via
    # the virtual service config.
    - name: mediawiki-api-proxied-domains
      # Override mediawiki-api-vs to mw-api-int-ro T362316
      spec:
        hosts:
        - '*.wikipedia.org'
        - 'wikipedia.org'
        - '*.wiktionary.org'
        - 'wiktionary.org'
        - '*.wikidata.org'
        - 'wikidata.org'
        - '*.wikiquote.org'
        - 'wikiquote.org'
        - '*.wikibooks.org'
        - 'wikibooks.org'
        - '*.wikisource.org'
        - 'wikisource.org'
        ports:
        - name: http-port-k8s
          number: 4680
          protocol: HTTP
        - name: http-port
          number: 80
          protocol: HTTP
        resolution: NONE
    - name: eventgate-main-se
      spec:
        hosts:
        - eventgate-main.discovery.wmnet
        ports:
        - name: http-port
          # This port is used by the Destination Rule for TLS egress origination
          number: 4480
          protocol: HTTP
          targetPort: 4492
        - name: https-port
          number: 4492
          protocol: HTTPS
        resolution: DNS
    - name: rest-gateway
      spec:
        hosts:
        - rest-gateway.discovery.wmnet
        ports:
        - name: http-port
          # This port is used by the Destination Rule for TLS egress origination
          number: 4111
          protocol: HTTP
          targetPort: 4113
        - name: https-port
          number: 4113
          protocol: HTTPS
        resolution: DNS
    virtual_services:
    # Override mediawiki-api-vs to mw-api-int-ro T362316
    - name: mediawiki-api-vs
      spec:
        gateways:
        - mesh
        hosts:
        - '*.wikipedia.org'
        - 'wikipedia.org'
        - '*.wiktionary.org'
        - 'wiktionary.org'
        - '*.wikidata.org'
        - 'wikidata.org'
        - '*.wikiquote.org'
        - 'wikiquote.org'
        - '*.wikibooks.org'
        - 'wikibooks.org'
        - '*.wikisource.org'
        - 'wikisource.org'
        http:
        - match:
          - port: 4680
          route:
          - destination:
              host: mw-api-int-ro.discovery.wmnet
          retries:
            # Rationale (may need to be revisited after upgrading Istio):
            # https://phabricator.wikimedia.org/T320374#8338627
            attempts: 3
            retryOn: connect-failure,refused-stream,reset,503
          headers:
            request:
              set:
                # The TLS egress origination settings (see the related destination
                # rule's comment) have the side effect of presenting
                # a 'x-forwarded-proto: http' header to the target API, that in turn
                # may return a warning in every response. To circumvent this problem,
                # let's explicitly set the header.
                x-forwarded-proto: https
    - name: eventgate-main-vs
      spec:
        gateways:
        - mesh
        hosts:
        - 'eventgate-main.discovery.wmnet'
        http:
        - match:
          - port: 4480
          route:
          - destination:
              host: eventgate-main.discovery.wmnet
          retries:
            # Rationale (may need to be revisited after upgrading Istio):
            # https://phabricator.wikimedia.org/T320374#8338627
            attempts: 3
            retryOn: connect-failure,refused-stream,reset,503
          headers:
            request:
              set:
                # The TLS egress origination settings (see the related destination
                # rule's comment) have the side effect of presenting
                # a 'x-forwarded-proto: http' header to the target API, that in turn
                # may return a warning in every response. To circumvent this problem,
                # let's explicitly set the header.
                x-forwarded-proto: https
    - name: restgw-vs
      spec:
        gateways:
        - mesh
        hosts:
        - '*.wikipedia.org'
        - 'wikipedia.org'
        http:
        - match:
          - port: 4111
          route:
          - destination:
              host: rest-gateway.discovery.wmnet
          retries:
            # Rationale (may need to be revisited after upgrading Istio):
            # https://phabricator.wikimedia.org/T320374#8338627
            attempts: 3
            retryOn: connect-failure,refused-stream,reset,503
          headers:
            request:
              set:
                # The TLS egress origination settings (see the related destination
                # rule's comment) have the side effect of presenting
                # a 'x-forwarded-proto: http' header to the target API, that in turn
                # may return a warning in every response. To circumvent this problem,
                # let's explicitly set the header.
                x-forwarded-proto: https
