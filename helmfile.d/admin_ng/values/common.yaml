# Defaults applied to all clusters in all cluster_groups
#
# List of namespace overrides:
# <namespace-name>:
#   readOnlyUser: string
#     Default: <namepace-name>
#     The name of the read-only user for this namespace (needs to be created via private puppet).
#   deployUser: string
#     Default: <namepace-name>-deploy
#     The name of the deploy user for this namespace (needs to be created
#     via private puppet).
#   deployClusterRole: string
#     Default: deploy
#     ClusterRole to bind the deploy user to.
#   pspClusterRole: string
#     Default: allow-restricted-psp
#     The name of the ClusterRole granting access to the PSP this namespace
#     will use.
#     Note: If the ClusterRoleBinding already exists in the namespace,
#     it will need to be deleted first and then recreated with
#     the new ClusterRole.
#   systemNamespace: bool
#     Default: false
#     Don't deploy users or resource quota into this namespace.
#     Kubernetes builtin namespaces (default, kube-.*) are always treated as
#     system namespaces for safety reasons.
#   allowCriticalPods: bool
#     Default: false
#     WARNING: Although documented for Kubernetes >=1.16 this does not work
#              for namespaces other than "kube-system" in K8s v1.16, see:
#              https://github.com/kubernetes/kubernetes/issues/60596
#     Critical pods in this context are pods with priorityClassName
#     set to system-cluster-critical or system-node-critical.
#     See:
#     * https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
#     * https://kubernetes.io/docs/concepts/policy/resource-quotas/#limit-priority-class-consumption-by-default
#   labels: hash<string,string>
#     Default: {}
#     Provide a list of labels and their values to be added to the namespace.
#   tlsHostname: string
#     Default <namespace-name>
#     Each namespace will have TLS certificate issued that can be used with Istio-Ingresscontroller.
#     That certificate will be issued for the subject alt names:
#     - {{ $tlsHostname }}.discovery.wmnet
#     - {{ $tlsHostname }}.svc.codfw.wmnet
#     - {{ $tlsHostname }}.svc.eqiad.wmnet
#   deployTLSCertificate:
#     Default: false when the systemNamespace flag or the isBuiltinNamespace one
#     is true, and true in all the other cases.
#     Whether or not to deploy the TLS certificate <tlsHostname>
#     to the istio-system namespace.
namespaces: {}
GlobalNetworkPolicies: {}

IPAMConfig:
  # Prohibit nodes from borrowing IPs out of other nodes IPAM blocks (T296303)
  strictAffinity: true

# In helmfile_rbac.yaml we define a deploy ClusterRole and few other ones,
# like deploy-{flink,kserve,..} with special extra settings for ad-hoc use cases.
# To avoid deploying all extra deploy ClusterRoles to all clusters, we define
# a list of them for each cluster config. The value of the list are the names
# of the extra cluster roles to deploy without the common 'deploy-' prefix.
deployExtraClusterRoles: []

# Feature only available in Kubernetes 1.21+, but since we control all namespaces
# we implemented the feature.
# If set to true, it adds the label kubernetes.io/metadata.name=$namespace to
# all namespaces defined via helmfile.
NamespaceDefaultLabelName: true

# For cluster components like calico/coredns, override this in the specific
# environment files as it differs per cluster. You need to set it to avoid the
# chicken/egg problem
kubernetesApi:
  host: kubernetes.default.svc.cluster.local
  port: 443

limitranges:
  # check out documentation to understand this well
  # https://v1-12.docs.kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/
  container:
    min:
      memory: "100Mi"
      cpu: "100m"
    max:
      memory: "3Gi"
      cpu: "8"
    defaultRequest:
      memory: "100Mi"
      cpu: "100m"
    default:
      memory: "100Mi"
      cpu: "100m"
  pod:
    min:
      memory: "100Mi"
      cpu: "100m"
    max:
      memory: "5Gi"
      cpu: "9"

# https://v1-12.docs.kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/
resourcequota:
  pods: {}
  compute:
    requests:
      cpu: "90"
      memory: "100Gi"
    limits:
      cpu: "90"
      memory: "100Gi"

# Default config for Istio gateways
# The list of ports need to be kept in sync with what stated
# in the related custom_deploy.d's istioctl config.
istio:
  gateways:
    ingressgateway:
      ports:
        - 8443
        - 15443
        - 8080