# Default values for $SERVICE_NAME.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
helm_scaffold_version: 0.2 # This can be useful when backporting fixes.
docker:
  registry: docker-registry.wikimedia.org
  pull_policy: IfNotPresent
resources:
  replicas: 1
main_app:
  # Application type.
  # Currently supported values are:
  # - "default", for an application running from a single container, and emitting
  #   metrics via statsd or prometheus. Most service-runner based services fall into this category.
  # - "php" for php-based applications. The base images expect the code to live in
  #   /srv/app and to have an index.php file as entrypoint.
  type: "default"
  image: $IMAGE_NAME
  version: latest # we use latest everywhere in the defaults.
  port: $PORT # port exposed as a Service, also used by service-checker.
  # Use command and args below to override the entrypoint. Type is arrays
  # Not necessary unless you want to change the entrypoint defined in the docker image
  # Example:
  # command: ["node"]
  # args: ["bin/server.js", "--param1", "arg1"]
  command: []
  args: []
  requests:
    cpu: 1m # Just some sample, edit these - 100m is the minimum for deployment
    memory: 200Mi # Just some sample, edit these
  limits:
    cpu: 1 # Just some sample, edit these
    memory: 400Mi # Just some sample, edit these
  liveness_probe:
    tcpSocket:
      port: $PORT
  readiness_probe:
    httpGet:
      path: /
      port: $PORT
  # add here any volumes to mount onto the pod. Example:
  # volumes:
  #   - name: myvolumename
  #      hostPath:
  #        path: /myvolumepath # where on the host machine
  # add here any mounted volumes to make accessible to the container. Example:
  # volumeMounts:
  #   - name: myvolumename # the name from your volume above
  #     mountPath: /path/ # where it should live in your container

monitoring:
  # If enabled is true, monitoring annotations will be added to the deployment.
  enabled: false
  # If the application emits its metrics using statsd, we need to use the prometheus-statsd exporter
  # For service-runner based apps using service-runner < 2.8, this should be set to true
  uses_statsd: true
  # image_version: latest # image_version is defined globally by SRE. May be overridden here, though.
service:
  deployment: minikube # valid values are "production" and "minikube"
  port:
    name: http # a unique name of lowercase alphanumeric characters or "-", starting and ending with alphanumeric, max length 63
    # protocol: TCP # TCP is the default protocol
    targetPort: $PORT # the number or name of the exposed port on the container
    port: $PORT # the number of the port desired to be exposed to the cluster
    nodePort: null # you need to define this if "production" is used. In minikube environments let it autoallocate
config:
  public: {} # Add here all the keys that can be publicly available as a ConfigMap
  private: {} # Add here all the keys that should be private but still available as env variables

tls:
  enabled: false # Switch to true in production
  # image_version: 1.15.1-2 # image_version is defined globally by SRE. May be overridden here, though.
  public_port: $PORT # the port where TLS will be exposed
  upstream_timeout: "180.0s"
  # To be defined in a private space
  certs:
    cert: "snakeoil"
    key: "snakeoil"
  # Add here, via our "secret" system, the cert/key pairs
  #   cert: "your cert here"
  #   key: "your key here"
  # Enable telemetry
  telemetry:
    enabled: true
    port: 9361

# Additional resources if we want to add a port for a debugger to connect to.
debug:
  enabled: false
  # Define here any port that you want to expose for debugging purposes
  ports: []

networkpolicy:
  egress:
    enabled: false

php:
  httpd:
    version: "2.4.38-1-s1"
    port: "8080"
    exporter_version: 0.0.1
    requests:
      cpu: 200m # Just some sample, edit this
      memory: 200Mi # Just some sample, edit this
    limits:
      cpu: 1 # Just some sample, edit this
      memory: 400Mi # Just some sample, edit this
  fcgi_mode: FCGI_TCP
  exporter_version: 0.0.1
  servergroup: main
  opcache:
    size: "200"
    nofiles: "1000"
  apc:
    size: "200M"
  workers: 2
  timeout: 60
# See the dockerfiles for the the php-fpm base image to know what can be tweaked.
# Those can be passed via config.public above.

